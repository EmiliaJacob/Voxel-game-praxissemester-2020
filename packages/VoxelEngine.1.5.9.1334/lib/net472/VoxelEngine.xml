<?xml version="1.0"?>
<doc>
    <assembly>
        "VoxelEngine"
    </assembly>
    <members>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Bullet(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Creates a bullet point. Next Element is drawn next to the bullet point.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.String)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
            <param name="fontCol">Color of text, default is black</param>
            <param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
/// <summary>
Colorable progress bar.
</summary><param name="fraction">Value which is shown by the progress bar. 0f to 1f</param><param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param><param name="frameCol">Color of progressbars background</param><param name="barCol">Color of filling bar</param><param name="fontCol">Color of text, default is black</param><param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param></member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.String)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
            <param name="fontCol">Color of text, default is black</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.String)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
            <param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
            <param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4,System.String)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBarColored(VoxelEngine.UI.UIContext,System.Single,System.Boolean,VoxelEngine.UI.Palette.Color4,VoxelEngine.UI.Palette.Color4)">
            <summary>
Colorable progress bar.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameCol">Color of progressbars background</param>
            <param name="barCol">Color of filling bar</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBar(VoxelEngine.UI.UIContext,System.Single,System.Boolean)">
            <summary>
Creates a progress bar with fraction only.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBar(VoxelEngine.UI.UIContext,System.Single,System.Boolean,System.String)">
            <summary>
Creates a progress bar with fraction and overlay.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBar(VoxelEngine.UI.UIContext,System.Single,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates a progress bar with fraction and vertical size.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ProgressBar(VoxelEngine.UI.UIContext,System.Single,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.String)">
            <summary>
Creates a progress bar with fraction, vertical size and overlay.
</summary>
            <param name="fraction">Value which is shown by the progress bar. 0f to 1f</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="vert_size">Vertical size of the progress bar. (-1, 0) is standard</param>
            <param name="overlay">Text shown on the progress bar. Default is the percentage of the progress.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.RadioButton(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,System.Int32)">
            <summary>
Creates radiobutton with exact identification. Can be used to create groups of radiobuttons.
Writes boolean into the dictionary ElementValues with label as key, which holds the state of selection of the button itself and an
Int with the id of the currently selected button of a button group.
</summary>
            <param name="label">Text which is shown next to the radiobutton. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="buttonGroupName">Name of group where the button is in.</param>
            <param name="button_id">Exact id of the radiobutton</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.RadioButton(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Boolean)">
            <summary>
Creates radiobutton.
Writes boolean into the dictionary ElementValues with label as key, which holds the state of selection
</summary>
            <param name="label">Text which is shown next to the checkbox. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="active">Boolean which holds the actual state of the radiobutton</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.CheckboxFlags(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.UInt32)">
            <summary>
Creates a checkbox which can be used to set flags.
Writes boolean into the dictionary ElementValues with label as key, which holds the state of selection and a
int with label+currentFlag, which holds the current flag.
</summary>
            <remarks>For more information about the checkboxflags, check the imgui documentation of ocornut.</remarks>
            <param name="label">Text which is shown next to the checkbox. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags_value">Current flag to set.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Checkbox(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Boolean)">
            <summary>
Creates a checkbox.
Writes boolean into the dictionary ElementValues with label as key, which holds the state of selection and a
Boolean with label+isChecked, which holds the state of checked or unchecked.
</summary>
            <param name="label">Text which is shown next to the checkbox. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="bg_col">Background color. See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="bg_col">Background color. See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Int32)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="frame_padding">size of padding of frame</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.Int32)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="bg_col">Background color. See dear imgui documentation for more info</param>
            <param name="frame_padding">size of padding of frame</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Int32)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
            <param name="frame_padding">size of padding of frame</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ImageButton(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.Int32)">
            <summary>
Creates an imagebutton. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
Writes boolean into the dictionary ElementValues with str_id as key, which holds the current state of the button.
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="str_id">Unique identifier</param>
            <param name="size">Size of the imagebutton</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="bg_col">Background color. See dear imgui documentation for more info</param>
            <param name="frame_padding">size of padding of frame</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Image(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an image. The texture of the image is loaded by given user_texture_id. This id is obtainable on load of the texture via UIControl.LoadTexture()
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of the image</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Image(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an image. The texture of the image is loaded by given user_texture_id. This id is obtainable on Load of the texture via UIControl.LoadTexture()
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of the image</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="border_col">Border color. See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Image(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an image. The texture of the image is loaded by given user_texture_id. This id is obtainable on Load of the texture via UIControl.LoadTexture()
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of the image</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Image(VoxelEngine.UI.UIContext,System.UInt32,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates an image. The texture of the image is loaded by given user_texture_id. This id is obtainable on Load of the texture via UIControl.LoadTexture()
</summary>
            <param name="user_texture_id">Id of texture which is loaded</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of the image</param>
            <param name="uv0">See dear imgui documentation for more info</param>
            <param name="uv1">See dear imgui documentation for more info</param>
            <param name="tint_col">See dear imgui documentation for more info</param>
            <param name="border_col">Border color. See dear imgui documentation for more info</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.ArrowButton(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.ArrowDirection)">
            <summary>
Creates a arrow button with given direction.
Writes boolean into the dictionary ElementValues with str_id as key, which holds the actual state of the button.
</summary>
            <param name="str_id">Id of the arrow button, which is required to create. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="direction">Direction of the arrow button</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.InvisibleButton(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates a button which is not visible. For more information pls read the imgui documentation of ocornut.
Writes boolean into the dictionary ElementValues with str_id as key, which holds the actual state of the button.
</summary>
            <param name="str_id">Id of the invisible button, which is required to create. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">2D Vector which defines the button's size</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.SmallButton(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a small button with given text.
Writes boolean into the dictionary ElementValues with label as key, which holds the actual state of the button.
</summary>
            <param name="label">Text which is shown on the button. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Button(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates button with default size and given text.
Writes boolean into the dictionary ElementValues with label as key, which holds the actual state of the button.
</summary>
            <param name="label">Text which is shown on the button. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMainExtension.Button(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates button with given size and text.
Writes boolean into the dictionary ElementValues with label as key, which holds the actual state of the button.
</summary>
            <param name="label">Text which is shown on the button. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">2D Vector which defines the button's size</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetMainExtension">
            <summary>
Contains many clickable and manipulatable elements such as buttons, radiobuttons and checkboxes.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.ArrowDirection">
            <summary>
A class which represents Directions. Wrapper for ImGuiDir.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for int input for 4 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for int input for 4 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for int input for 4 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for int input for 3 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for int input for 2 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for int input for 2 values.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for int input.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for int input.
</summary>
            <param name="label">&gt;Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for float input of 4 values.
Input format is %.3f
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a textfield for float input of 4 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for float input of 4 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for float input of 3 values
Input format is %.3f.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a textfield for float input of 3 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for float input of 3 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for float input of 2 values.
Input format is %.3f
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a textfield for float input of 2 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for float input of 2 values.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for float input.
Input format is %.3f
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a textfield for float input.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for float input.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="format">Format how the float value is inputted</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputTextWithHint(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a textfield for text input with a hint. Takes 20 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="hint">Hint which is visible in the textfield, outgrayed</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputTextWithHint(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for text input with a hint. Takes 20 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="hint">Hint which is visible in the textfield, outgrayed</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputTextMultiline(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for multiline text input. Takes 200 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputTextMultiline(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates a textfield for multiline text input. Takes 200 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Visual size of text field</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputTextMultiline(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for multiline text input. Takes 200 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Visual size of text field</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputText(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a textfield for text input. Takes 20 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetValueInputExtension.InputText(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UIInputTextFlags)">
            <summary>
Creates a textfield for text input. Takes 20 chars maximum.
</summary>
            <param name="label">Label of textfield. Also an unqiue identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the inputs appearance and function</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetValueInputExtension">
            <summary>
Contains elements for different input values in widgets.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.CollapsingHeaderClose(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UITreeNodeFlags)">
            <summary>
Creates a collapsing header, which is like a treenode, but doesnt indent the content and doesnt need a TreeNodePop() at the end.
Has an additional small close button on upper right of the header. 
Writes boolean into the dictionary ElementValues with str_id as key, which is true if the header gets opened.	
Writes boolean into the dictionary ElementValues with str_id as key, which is false if the header is invisible.	
</summary>
            <param name="str_id">Title of the CollapsingHeader. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the header's appearance</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.CollapsingHeader(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UITreeNodeFlags)">
            <summary>
Creates a collapsing header, which is like a treenode, but doesnt indent the content and doesnt need a TreeNodePop() at the end. 
Writes boolean into the dictionary ElementValues with str_id as key, which is true if the header gets opened.		
</summary>
            <param name="str_id">Title of the CollapsingHeader. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the header's appearance</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.GetTreeNodeToLabelSpacing(VoxelEngine.UI.UIContext,System.Single@)">
            <summary>
horizontal distance preceding label when using TreeNode*() or Bullet() == (g.FontSize + style.FramePadding.x*2) for a regular unframed TreeNode
</summary>
            <param name="labelSpacing">Spacing as float</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.TreeNodePop(VoxelEngine.UI.UIContext,System.String)">
            <summary>
Closes the treenode with given id.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.TreeNodeFlagsCustom(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UITreeNodeFlags,System.String)">
            <summary>
Creates a treenode with label as key and displayedText as Title.
Writes boolean into the dictionary ElementValues with label as key, which is true if the treenode gets opened.
</summary>
            <param name="str_id">Title of the TreeNode. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the treenode's appearance</param>
            <param name="displayedText">Text which gets displayed as the treenodes title. See Api documentation for formats which can be used here</param>
            <example>
Formats for the displayed Text:
<code>
format 1 =&gt; string.Format("one: {0} two: {1} three: {2}", one, two, three)

format 2 =&gt; "one: " + one + " two: " + two + " three: " + three

format 3 =&gt; $"one: {one} two: {two} three: {three}" 
</code></example>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.TreeNodeFlags(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UITreeNodeFlags)">
            <summary>
Creates a treenode with the label as title.
Writes boolean into the dictionary ElementValues with label as key, which is true if the treenode gets opened.
</summary>
            <param name="label">Title of the TreeNode. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the treenode's appearance</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.TreeNodeCustom(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a treenode with label as key and displayedText as Title.
Writes boolean into the dictionary ElementValues with label as key, which is true if the treenode gets opened.		
</summary>
            <param name="label">An unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="displayedText">Text which gets displayed as the treenodes title. See Api documentation for formats which can be used here</param>
            <example>
Formats for the displayed Text:
<code>
format 1 =&gt; string.Format("one: {0} two: {1} three: {2}", one, two, three)

format 2 =&gt; "one: " + one + " two: " + two + " three: " + three

format 3 =&gt; $"one: {one} two: {two} three: {three}" 
</code></example>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTreeNodeExtension.TreeNode(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a treenode with the key as title.
Writes boolean into the dictionary ElementValues with label as key, which is true if the treenode gets opened.
</summary>
            <param name="label">Title of the TreeNode. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetTreeNodeExtension">
            <summary>
Contains many various treenode elements.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UITreeNodeFlags">
            <summary>
Struct for different Imgui TreeNode Flags
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetUtilitiesExtension.GetWindowSize(VoxelEngine.UI.UIContext,System.Numerics.Vector2@)">
            <summary>
Gets window size.
</summary>
            <param name="wSize">Size vector</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetUtilitiesExtension.GetWindowPos(VoxelEngine.UI.UIContext,System.Numerics.Vector2@)">
            <summary>
Gets current window position in screen space.
</summary>
            <param name="wPos">Position vector</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetUtilitiesExtension.IsWindowHovered(VoxelEngine.UI.UIContext,VoxelEngine.UI.UIHoveredFlags,System.Boolean@)">
            <summary>
Returns window state
</summary>
            <param name="flags">Flag to determine what is checked. <see cref="T:VoxelEngine.UI.UIFocusedFlags" /></param>
            <param name="isHovered" />
        </member>
        <member name="M:VoxelEngine.UI.WidgetUtilitiesExtension.IsWindowFocused(VoxelEngine.UI.UIContext,VoxelEngine.UI.UIFocusedFlags,System.Boolean@)">
            <summary>
Returns window state in terms of focus. Can be flagged for root of window, child of window.... 
</summary>
            <param name="flags">Flag to determine which window should return its state. <see cref="T:VoxelEngine.UI.UIHoveredFlags" /></param>
            <param name="isFocused">Boolean which holds the actual window state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetUtilitiesExtension.IsWindowCollapsed(VoxelEngine.UI.UIContext,System.Boolean@)">
            <summary>
Returns window state in terms of collapsing
</summary>
            <param name="isCollapsed">Boolean which holds the actual window state</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetUtilitiesExtension">
            <summary>
Contains elemeents to get information about windows.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetFrameHeightWithSpacing(VoxelEngine.UI.UIContext,System.Boolean,System.Single@)">
            <summary>
FontSize + style.FramePadding.y * 2 + style.ItemSpacing.y (distance in pixels between 2 consecutive lines of framed widgets)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameHeightWithSpacing">frame height with spacing</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetFrameHeight(VoxelEngine.UI.UIContext,System.Boolean,System.Single@)">
            <summary>
~ FontSize + style.FramePadding.y * 2
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="frameHeight">frame height</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetTextLineHeightWithSpacing(VoxelEngine.UI.UIContext,System.Boolean,System.Single@)">
            <summary>
Gets height of text plus spacing between lines.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="textLineHeightWithSpacing">height as float</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetTextLineHeight(VoxelEngine.UI.UIContext,System.Boolean,System.Single@)">
            <summary>
Gets height of the text. Proportional to FontSize
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="textLineHeight">textheight as float</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.AlignTextToFramePadding(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
vertically align upcoming text baseline to FramePadding.y so that it will align properly to regularly framed items (call if you have text on a line before a framed item)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.SetCursorScreenPos(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Sets the cursor position in absolute screen coordinates
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="pos">Vector with coordinates of new cursor position</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetCursorScreenPos(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
Gets cursor position in absolute screen coordinates.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="cursorScreenPos">Vector with coordinates</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetCursorStartPos(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
Gets the start position of the cursor
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="cursorStartPos">Vector with coordinates</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.SetCursorPos(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Sets cursor position in window
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="localPos">Vector with coordinates of new cursor position</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetCursorExtension.GetCursorPos(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
Cursor position in window coordinates (relative to window position)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="cursorPos">Vector with coordinates</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetCursorExtension">
            <summary>
Contains Elements which can be used with the cursor.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetContainerItemExtension.Selectable(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UISelectableFlags)">
            <summary>
Creates a selectable item.
Writes boolean into the dictionary ElementValues with label+"isChosen" as key, which toggles on clicking the selectable.
Writes boolean into the dictionary ElementValues with label+"isSelected" as key, which gets true if the selectable is hovered.
</summary>
            <param name="label">Label with name of the selectable. Also an unique identifier.</param>
            <param name="flags">Flags which can be used to manipulate the selectable's appearance</param>
            <param name="isActive">Only creates the item if true. Use if selectable is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetContainerItemExtension.Selectable(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UISelectableFlags,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Creates a selectable item.
Writes boolean into the dictionary ElementValues with label+"isChosen" as key, which toggles on clicking the selectable.
Writes boolean into the dictionary ElementValues with label+"isSelected" as key, which gets true if the selectable is hovered.
</summary>
            <param name="label">Label with name of the selectable. Also an unique identifier</param>
            <param name="flags">Flags which can be used to manipulate the selectable's appearance</param>
            <param name="size">Size of the selectable</param>
            <param name="isActive">Only creates the item if true. Use if selectable is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetContainerItemExtension.MenuItem(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String)">
            <summary>
Creates a MenuItem.
Writes boolean into the dictionary ElementValues with label as key, which is true if the item is chosen.
Writes boolean into the dictionary ElementValues with label+"isEnabled" as key, which is true if the item is visible.
Writes boolean into the dictionary ElementValues with label+"isSelected" as key, which gets true if the item is hovered.
</summary>
            <param name="label">Title of the menu item. Also an unique identifier</param>
            <param name="shortcut">Text which is shown next to the menu item. Can be used for shortcuts. Only text, no logic</param>
            <param name="isActive">Only creates the item if true. Use if menu item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetContainerItemExtension.MenuItem(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates a MenuItem.
Writes boolean into the dictionary ElementValues with label+"isEnabled" as key, which is true if the item is visible.
Writes boolean into the dictionary ElementValues with label+"isSelected" as key, which gets true if the item is hovered.
</summary>
            <param name="label">Title of the menu item. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if menu item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetContainerItemExtension">
            <summary>
Contains elements which can be used almost anywhere. In Container, menubars, windows etc..
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UIFocusedFlags">
            <summary>
Struct for different Imgui Focus Flags
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.BiomControl.CreateMinecraftWorld(System.String,System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
This funktion is called by <see cref="!:AutoCreateLandscape" />,
if the landscape should be similar to a Minecraft-World.
</summary>
            <param name="size">is the size of our world.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.BiomControl.CreatePlaneWorld(System.String,System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
This funktion is called by <see cref="!:AutoCreateLandscape" />,
if the landscape should be a plane.
</summary>
            <param name="size">is the size of our world.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.EndMenu(VoxelEngine.UI.UIContext)">
            <summary>
Ends current menu.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.BeginMenu(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Boolean)">
            <summary>
Creates Menu in current menu bar or main menu bar.
Writes boolean into the dictionary ElementValues with label as key, which is true if the menu gets opened.
</summary>
            <param name="label">Title of the menu bar. Also an unique identifier</param>
            <param name="enabled">Vision of menu bar. True: is visible, false: is not</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.BeginMenu(VoxelEngine.UI.UIContext,System.String,System.Boolean)">
            <summary>
Creates Menu in current menu bar or main menu bar.
Writes boolean into the dictionary ElementValues with label as key, which is true if the menu gets opened.
</summary>
            <param name="label">Title of the menu bar. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.EndMenuBar(VoxelEngine.UI.UIContext)">
            <summary>
Ends appending to menu bar in current window.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.BeginMenuBar(VoxelEngine.UI.UIContext)">
            <summary>
Create and appen to menu bar of current window.
Requires ImguiWindowFlags_MenuBar tag set on parent window.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.EndMainMenuBar(VoxelEngine.UI.UIContext)">
            <summary>
Ends appending to current full screen menu bar.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetMenusExtension.BeginMainMenuBar(VoxelEngine.UI.UIContext)">
            <summary>
Create and append to a full screen menu bar.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.WidgetMenusExtension">
            <summary>
Represents the functionality of ImGui menu elements.
Note the difference between BeginMainMenuBar() and BeginMenuBar():
- BeginMenuBar() = menu-bar inside current window we Begin()-ed into (the window needs the ImGuiWindowFlags_MenuBar flag)
- BeginMainMenuBar() = helper to create menu-bar-sized window at the top of the main viewport + call BeginMenuBar() into it.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.CloseCurrentPopup(VoxelEngine.UI.UIContext)">
            <summary>
Closes current popup. Only call between BeginPopupXXX() and EndPopup().
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.IsPopupOpen(VoxelEngine.UI.UIContext,System.String)">
            <summary>
Checks if popup is open, by id.
The state is written as boolean into the ElementValue dictionary with str_id as key.
</summary>
            <param name="str_id">Identifier of popup which should be checked</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.OpenPopupOnItemClick(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIMouseButton)">
            <summary>
Opens popup by id, when the previous stated item is clicked.
</summary>
            <param name="str_id">Unique identifier for this popup</param>
            <param name="mousebutton">Mousebutton which should trigger the popup</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.EndPopup(VoxelEngine.UI.UIContext)">
            <summary>
Closes the last openend popups stack.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.BeginPopupModal(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIWindowFlags)">
            <summary>
Creates a modal dialog, a regular window with title bar. Can't be closed by clicking outside.
Writes boolean into the dictionary ElementValues with name as key, which is true if the modal is open.
</summary>
            <param name="name">Title of the modal dialog. Also an unique identifier</param>
            <param name="windowFlags">Flags which can be used to manipulate the popups appearance</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.BeginPopupContextVoid(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIMouseButton)">
            <summary>
Pop which gets openend when clicked in a location where no UI element is existing.
Writes boolean into the dictionary ElementValues with label as key, which is true if the popup gets opened.
</summary>
            <param name="str_id">Unique identifier for this popup</param>
            <param name="mousebutton">Mousebutton which should trigger the popup</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.BeginPopupContextWindow(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIMouseButton,System.Boolean)">
            <summary>
Popup which gets opened when the window, where the popup is located in, gets clicked.
Writes boolean into the dictionary ElementValues with label as key, which is true if the popup gets opened.
</summary>
            <param name="str_id">Unique identifier for this popup</param>
            <param name="mousebutton">Mousebutton which should trigger the popup</param>
            <param name="also_over_items">True = Popup gets also triggered, if any item in the related window gets clicked</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.BeginPopupContextItem(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIMouseButton)">
            <summary>
Popup which gets opened when the item right before the popup is clicked.
Writes boolean into the dictionary ElementValues with label as key, which is true if the popup gets opened.
</summary>
            <param name="str_id">Unique identifier for this popup</param>
            <param name="mousebutton">Mousebutton which should trigger the popup</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.BeginPopup(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIWindowFlags)">
            <summary>
Creates new standard popup and starts appending to it.
Writes boolean into the dictionary ElementValues with label as key, which is true if the popup gets opened.
</summary>
            <param name="str_id">Unique identifier for this popup</param>
            <param name="windowFlags">&gt;Flags which can be used to manipulate the popups appearance</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetPopupExtension.OpenPopup(VoxelEngine.UI.UIContext,System.String)">
            <summary>
Call to mark popup as open (don't call every frame!).
Popups are closed when user click outside, or if CloseCurrentPopup() is called within a BeginPopup()/EndPopup() block.
By default, Selectable()/MenuItem() are calling CloseCurrentPopup().
Writes boolean into the dictionary ElementValues with label as key, which is true if the popup gets opened.
</summary>
            <param name="str_id">Id of popup to open</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetPopupExtension">
            <summary>
Contains popup elements.
</summary>
        </member>
        <member name="T:VoxelEngine.Biom.Enums.LandSize">
            <summary>
Enum class for different land sizes.
Little -&gt; 32x32x32
Medium -&gt; 64x64x32
Large -&gt; 128x128x32
Extra Large -&gt; 256x256x32
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>
Creates four draggers which take ints.
Has the format %d on the slider element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
Creates four draggers which take ints.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>
Creates three draggers which take ints.
Has the format %d on the slider element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
Creates three draggers which take ints.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>
Creates two draggers which take ints.
Has the format %d on the slider element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
Creates two draggers which take ints.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>
Creates a single dragger which takes an int.
Has the format %d on the slider element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Int32,System.Int32,System.String)">
            <summary>
Creates a single dragger which takes an int.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
Creates four draggers which take floats.
Has the format %.3f on the dragger element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String)">
            <summary>
Creates four draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates four draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
            <param name="power">Use power!=1.0 for power curve dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
Creates three draggers which take floats.
Has the format %.3f on the dragger element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String)">
            <summary>
Creates three draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates three draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
            <param name="power">Use power!=1.0 for power curve dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
Creates two draggers which take floats.
Has the format %.3f on the dragger element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String)">
            <summary>
Creates two draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates two draggers which take floats.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
            <param name="power">Use power!=1.0 for power curve dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
Creates a single dragger which takes a float.
Has the format %.3f on the dragger element.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String)">
            <summary>
Creates a single dragger which takes a float.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetDragExtension.DragFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates a single dragger which takes a float.
If min &gt;= max, then there is no boundary for the dragger.
</summary>
            <param name="label">Label of the dragger. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="speed">Speed how fast the dragger is changing its value.</param>
            <param name="min">Min Value of dragger</param>
            <param name="max">Max value of dragger</param>
            <param name="format">Format how the draggers value is viewed on the dragger element</param>
            <param name="power">Use power!=1.0 for power curve dragger</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetDragExtension">
            <summary>
Contains Elements for draggers.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.TextureLoader.LoadTexture(VoxelEngine.UI.UIContext,System.String)">
            <summary>
Loads a 2D texture into OpenGL. The returned ID can be used by Imgui to view the image.
</summary>
            <param name="path">Path to the Image which should be loaded. Relative to the executable of the application.</param>
            <returns>The OpenGL ID of the loaded texture</returns>
        </member>
        <member name="T:VoxelEngine.UI.TextureLoader">
            <summary>
Texture Loader for Imgui which provides loading method for Imgui.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTooltipExtension.SetTooltip(VoxelEngine.UI.UIContext,System.Boolean,System.String)">
            <summary>
set a text-only tooltip, typically use with ImGui::IsItemHovered(). override any previous call to SetTooltip(). 
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTooltipExtension.EndTooltip(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Ends previous started tooltip
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTooltipExtension.BeginTooltip(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
begin/append a tooltip window. to create full-featured tooltip (with any kind of items).
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetTooltipExtension">
            <summary>
Contains elements for widget tooltips.
</summary>
/// <example>
Formatoptions for the formattedText:
<code>
format 1 =&gt; string.Format("one: {0} two: {1} three: {2}", one, two, three)

format 2 =&gt; "one: " + one + " two: " + two + " three: " + three

format 3 =&gt; $"one: {one} two: {two} three: {three}" 
</code></example></member>
        <member name="T:VoxelEngine.UI.UISelectableFlags">
            <summary>
Struct for different Imgui Selectable Flags
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetComboExtension.Combo(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String[],System.Int32)">
            <summary>
Creates a combo according to the inputted items. Only one can be selected.
Writes int into the dictionary ElementValues with label+"currentItem" as key, which holds the id of the selected item.
</summary>
            <param name="label">Label with name of the combolist. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="items">List with strings of selectable items.</param>
            <param name="items_count">Count of the items, which should be shown.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetComboExtension.EndCombo(VoxelEngine.UI.UIContext)">
            <summary>
Ends the previous began combo and pops it from the stack.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetComboExtension.BeginCombo(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.String,VoxelEngine.UI.UIComboFlags)">
            <summary>
Begins a combo on stack. The combo can be filled with Selectables.
With this combo, multiple selects are possible.
Writes boolean into the dictionary ElementValues with label as key, which is true if the combo gets opened.
</summary>
            <param name="label">Label with name of the combolist. Also an unique identifier.</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="preview_value">preview which is shown on the main part of the combo element</param>
            <param name="comboFlags">Flags which can be used to manipulate the combo elements appearance</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetComboExtension">
            <summary>
Contains Combo Elements.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.SetItemAllowOverlap(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
allow last item to be overlapped by a subsequent item. sometimes useful with invisible buttons, selectables, etc. to catch unused area.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.GetItemRectSize(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
get size of last item
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="itemRectSize">Contains Vector of the rectangle size</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.GetItemRectMax(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
get lower-right bounding rectangle of the last item (screen space)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="itemRectMax">Contains Vector of the rectangle maximum</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.GetItemRectMin(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed@)">
            <summary>
get upper-left bounding rectangle of the last item (screen space)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="itemRectMin">Contains Vector of the rectangle minimum</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsAnyItemFocused(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is any item focused?
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isAnyItemFocused">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsAnyItemActive(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is any item active?
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isAnyItemActive">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsAnyItemHovered(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is any item hovered?
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isAnyItemHovered">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemDeactivatedAfterEdit(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
was the last item just made inactive and made a value change when it was active? (e.g. Slider/Drag moved). Useful for Undo/Redo patterns with widgets that requires continuous editing. Note that you may get false positives (some widgets such as Combo()/ListBox()/Selectable() will return true even when clicking an already selected item).
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemHoveredAfterEdit">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemDeactivated(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
was the last item just made inactive (item was previously active). Useful for Undo/Redo patterns with widgets that requires continuous editing.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemDeactivated">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemActivated(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
was the last item just made active (item was previously inactive).
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemActivated">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemEdited(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
did the last item modify its underlying value this frame? or was pressed? This is generally the same as the "bool" return value of many widgets.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemEdited">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemVisible(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is the last item visible? (items may be out of sight because of clipping/scrolling)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemVisible">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemClicked(VoxelEngine.UI.UIContext,System.Boolean,VoxelEngine.UI.UIMouseButton,System.Boolean@)">
            <summary>
Is the last item clicked? (e.g. button/node just clicked on) == IsMouseClicked(mouse_button) + IsItemHovered()
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="mousebutton">Mousebutton which is clicked</param>
            <param name="isItemClicked">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemClicked(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is the last item clicked? (e.g. button/node just clicked on) == IsMouseClicked(mouse_button) + IsItemHovered()
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemClicked">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemFocused(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is the last item focused for keyboard/gamepad navigation?
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemFocused">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemActive(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean@)">
            <summary>
is the last item active? (e.g. button being held, text field being edited. This will continuously return true while holding mouse button on an item. Items that don't interact will always return false)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="isItemActive">Contains the boolean of the state</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetItemUtilitiesExtension.IsItemHovered(VoxelEngine.UI.UIContext,System.Boolean,VoxelEngine.UI.UIHoveredFlags,System.Boolean@)">
            <summary>
is the last item hovered? (and usable, aka not blocked by a popup, etc.). See ImGuiHoveredFlags for more options.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="flags">Flags which can be used to manipulate the hovered behaviour</param>
            <param name="isItemHovered">Contains the boolean of the state</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetItemUtilitiesExtension">
            <summary />
        </member>
        <member name="T:VoxelEngine.UI.UIInputTextFlags">
            <summary>
Struct for different Imgui InputText Flags
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.RenderVoxelBuffer(EngineCore.Graphics.Buffer.VoxelBuffer,EngineCore.Graphics.Shaders.ShaderProgram!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
In this function the buffers got rendered.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.AddUniforms">
            <summary>
In this function the uniform gets their values.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.CreateVoxelBuffers">
            <summary>
In this function all needed voxel buffers are created.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.CreateUniformBuffers">
            <summary>
In this function all needed uniform buffers are created.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.AddShadersAndCreateGLProgram(VoxelEngine.IEngine)">
            <summary>
This function adds all of our shaders and create an Open GL shader
program from them.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableColorTransparency">
            <summary>
Disables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableColorTransparency">
            <summary>
Enables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableRenderingWithColorPalette">
            <summary>
This function disable the use of ColorPalette in the PBR-Rendering
and enables the use of Texturing for World-Elements.
World-Elements are the Voxels.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableRenderingWithColorPalette">
            <summary>
This function enable the use of ColorPalette in the PBR-Rendering
and disables the use of Texturing for World-Elements.
World-Elements are the Voxels.
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableIsFxaa">
            <summary>
Disables Fxaa
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableIsFxaa">
            <summary>
Enables Fxaa
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableToneMapping">
            <summary>
Disables ToneMapping
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableToneMapping">
            <summary>
Enables ToneMapping
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableBloom">
            <summary>
Disables Bloom
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableBloom">
            <summary>
Enables Bloom
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableSkyBox">
            <summary>
Disables Skyboy
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableSkyBox">
            <summary>
Enables Skybox
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.DisableShadows">
            <summary>
Disables Shadows
</summary>
        </member>
        <member name="M:VoxelEngine.DefaultRenderer.EnableShadows">
            <summary>
Enables Shadows
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.ShutdownEngine">
            <summary>
Close the Engine.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.ShutdownWindow">
            <summary>
Close the Window.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.Culling">
            <summary>
Culling our world data.
returns the data which isn't culled.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.UpdateAll">
            <summary>
Updates the game/demo.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.SetTimeStep">
            <summary>
Set the timeStep.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.InitEngine">
            <summary>
Initialize the Engine.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.InitOpenGL">
            <summary>
Initialize OpenGL.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.InitWindow">
            <summary>
Initialize Window.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.CheckSystems">
            <summary>
This function is checking the Windows-System
for needed programs.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.InitAll">
            <summary>
Initialize all.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.Run">
            <summary>
Runs the Engine.
</summary>
        </member>
        <member name="M:VoxelEngine.Engine.#ctor(VoxelEngine.EngineCreateInfo)">
            <summary>
Creates a new instance of Engine.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.CheckSystemIsEnabled">
            <summary>
This bool represent the status if the 
checkSystem will run at the start or not.
This parameter is set on false at default.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.Timer">
            <summary>
Gets the timer.
</summary>
            <value>
The timer.
</value>
        </member>
        <member name="P:VoxelEngine.Engine.Resolution">
            <summary>
Get the resolution in pixels.
</summary>
            <value>
A tuple representing the client resolution in pixels.
</value>
        </member>
        <member name="P:VoxelEngine.Engine.WrapInput">
            <summary>
Getter for the our WrapInput. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.GraphicControl">
            <summary>
Getter and setter for the our graphicControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.RenderBase">
            <summary>
setter for the our Renderer. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.WireFrame">
            <summary>
Getter and setter for the WireFrame.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.FrameCount">
            <summary>
Only getter for the FrameCount.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.Window">
            <summary>
Only getter for the Window.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.UIBuilder">
            <summary>
Only getter for the UI.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.Input">
            <summary>
Only getter for the Input.
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.VoxFileControl">
            <summary>
Getter for our voxFileControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.AudioControl">
            <summary>
Getter for the audioControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.ColorPaletteControl">
            <summary>
Getter for the colorPaletteControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.ModelControl">
            <summary>
Getter for the ModelControl
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.ObjectControl">
            <summary>
Getter for the objectControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.LightControl">
            <summary />
        </member>
        <member name="P:VoxelEngine.Engine.AnimationControl">
            <summary>
Getter for the AnimationControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.WorldControl">
            <summary>
Getter for the worldControl. 
</summary>
        </member>
        <member name="P:VoxelEngine.Engine.CameraControl">
            <summary>
Getter for the cameraControl. 
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.Culler_">
            <summary>
Store for our culler.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.WireFrame_">
            <summary>
Store for the wireFrame_ property.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.FrameCount_">
            <summary>
Store for the frameCount_ property.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.UIBuilder_">
            <summary>
Store for our UIController.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.WrapInput_">
            <summary>
Store for our WrapInput.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.GraphicControl_">
            <summary>
Store for our GraphicControl.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.RenderBase_">
            <summary>
Store for our RendererBase.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.Input_">
            <summary>
Store for a InputTracker.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.Window_">
            <summary>
Store for a GLFWWindow.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.createInfo">
            <summary>
Store of the createInfo of the Engine.
</summary>
        </member>
        <member name="F:VoxelEngine.Engine.DefaultFrameTime">
            <summary>
Store of the DEFAULT_FRAME_TIME.
</summary>
        </member>
        <member name="T:VoxelEngine.Engine">
            <summary>
Encapsulates all for the Engine.
</summary>
            <remarks>
The startpoint is <see cref="M:VoxelEngine.Engine.Run" /> .
This Engine contains all Inits (SpdLog, Window, OpenGL
and his own Init).
It also contains the game loop.
</remarks>
        </member>
        <member name="M:VoxelEngine.EngineCreateInfo.#ctor(System.String,System.Int32,System.Int32,System.Int64)">
            <summary>
Initializes a new instance of the Engine Creation Info structure 
using a title specified by an string and using window size specified by integer values.
</summary>
            <param name="title">The title for the engine window</param>
            <param name="width">The width for the engine window</param>
            <param name="height">The height for the engine window</param>
        </member>
        <member name="F:VoxelEngine.EngineCreateInfo.TimeStepInMicroSeconds">
            <summary>
Store of the TimeStepInMicroSeconds.
</summary>
        </member>
        <member name="F:VoxelEngine.EngineCreateInfo.Height">
            <summary>
Height of the window created by the engine.
</summary>
        </member>
        <member name="F:VoxelEngine.EngineCreateInfo.Width">
            <summary>
Width of the window created by the engine.
</summary>
        </member>
        <member name="F:VoxelEngine.EngineCreateInfo.Title">
            <summary>
Title of the window created by the engine.
</summary>
        </member>
        <member name="T:VoxelEngine.EngineCreateInfo">
            <summary>
Encapsulates parameters for the window creation. 
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.InitRenderer">
            <summary>
This function initialize our Renderer for PBR-rendering.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.AddShaders">
            <summary>
This function load all Shaders to the ShaderLibrary.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.SetRenderingCommands">
            <summary>
This function sets all needed RHICommands.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.CreateVoxelBuffers">
            <summary>
This function creates a voxelBuffer.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.RenderSetOfPrimitives">
            <summary>
This function render all from the primitive Controller.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.RenderWorldWithColorPalette(std.vector&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;,std.allocator&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;&gt;&gt;,System.Single)">
            <summary>
This function render our world with a color palette.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.InitForRenderSetOfPrimitives">
            <summary>
This function init everything for rendering with <see cref="M:VoxelEngine.PhysicallyBasedRenderer.RenderSetOfPrimitives" /></summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.InitForRenderWorldWithColorPalette">
            <summary>
This function init everything for rendering with <see cref="M:VoxelEngine.PhysicallyBasedRenderer.RenderWorldWithColorPalette(std.vector&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;,std.allocator&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;&gt;&gt;,System.Single)" /></summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableColorTransparency">
            <summary>
Disables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableColorTransparency">
            <summary>
Enables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableRenderingWithColorPalette">
            <summary>
This function disable the use of ColorPalette in the PBR-Rendering
and enables the use of Texturing for World-Elements.
World-Elements are the Voxels.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableRenderingWithColorPalette">
            <summary>
This function enable the use of ColorPalette in the PBR-Rendering
and disables the use of Texturing for World-Elements.
World-Elements are the Voxels.
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableIsFxaa">
            <summary>
Disables Fxaa
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableIsFxaa">
            <summary>
Enables Fxaa
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableToneMapping">
            <summary>
Disables ToneMapping
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableToneMapping">
            <summary>
Enables ToneMapping
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableBloom">
            <summary>
Disables Bloom
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableBloom">
            <summary>
Enables Bloom
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableSkyBox">
            <summary>
Disables Skyboy
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableSkyBox">
            <summary>
Enables Skybox
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.DisableShadows">
            <summary>
Disables Shadows
</summary>
        </member>
        <member name="M:VoxelEngine.PhysicallyBasedRenderer.EnableShadows">
            <summary>
Enables Shadows
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.LoadModelFromGeneration(System.String,EngineCore.VoxelVolume.Data.VoxelObjectData)">
            <summary>
Loads model from generated data
</summary>
            <param name="modelName">Name of model to load</param>
            <param name="generatedData">Data to load</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.LoadModel(System.String,System.String)">
            <summary>
Converts VoxFile of FileSystem into Model
</summary>
            <param name="filePath">path of the model</param>
            <returns>The loaded model</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.get_AnimationSets">
            <summary>
Return a dictionary with loaded animation sets
</summary>
            <returns>dictionary with loaded animation sets</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.ModelControl.AnimationSets">
            <summary>
Contains all loaded animation sets
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.get_Models">
            <summary>
Return a dictionary with loaded models
</summary>
            <returns>dictionary with loaded models</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.ModelControl.Models">
            <summary>
Contains all loaded models
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.ResetAnimationSetModelsOrientation(System.String)">
            <summary>
The load of magica voxel data is a bit buggy in terms of the orientation.
This resets the orientation of the models in the animation set.
</summary>
            <param name="animationSetName">Name of animation set to reset</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.ResetVoxelModelOrientation(System.String)">
            <summary>
The load of magica voxel data is a bit buggy in terms of the orientation.
This resets the orientation of the model.
</summary>
            <param name="modelName">Name of model to reset</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.SetAnimationSetDirection(System.String,System.Int32,System.Numerics.Vector3)">
            <summary>
Sets the direction of all models in animation set to given angle
</summary>
            <param name="animationSetName">Name of animation set which models get rotated</param>
            <param name="angleInDegrease">angle of direction</param>
            <param name="axis">The models are rotated around the given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.SetAnimationSetDirection(System.String,System.Int32)">
            <summary>
Sets the direction of all models in animation set to given angle
</summary>
            <param name="animationSetName">Name of animation set which models get rotated</param>
            <param name="angleInDegrease">angle of direction</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.RotateAnimationSet(System.String,System.Int32,System.Numerics.Vector3)">
            <summary>
Rotates all models of animation set by given angle
</summary>
            <param name="animationSetName">Name of animation set which models get rotated</param>
            <param name="angleInDegrease">angle of rotation</param>
            <param name="axis">The models are rotated around the given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.RotateAnimationSet(System.String,System.Int32)">
            <summary>
Rotates all models of animation set by given angle
</summary>
            <param name="animationSetName">Name of animation set which models get rotated</param>
            <param name="angleInDegrease">angle of rotation</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.SetModelDirection(System.String,System.Int32,System.Numerics.Vector3)">
            <summary>
Sets the direction of the model to given angle around given axis
</summary>
            <param name="modelName">Name of model which direction is set</param>
            <param name="angleInDegrease">angle of direction</param>
            <param name="axis">The model is rotated around the given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.SetModelDirection(System.String,System.Int32)">
            <summary>
Sets the direction of the model to given angle
</summary>
            <param name="modelName">Name of model which direction is set</param>
            <param name="angleInDegrease">angle of direction</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.RotateModel(System.String,System.Int32,System.Numerics.Vector3)">
            <summary>
Rotates model by given angle around given axis
</summary>
            <param name="modelName">Name of model to rotate</param>
            <param name="angleInDegrease">angle of rotation</param>
            <param name="axis">The model is rotated around the given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.RotateModel(System.String,System.Int32)">
            <summary>
Rotates model by given angle
</summary>
            <param name="modelName">Name of model to rotate</param>
            <param name="angleInDegrease">angle of rotation</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.GetModelExtent(System.String)">
            <summary>
Returns model extent
</summary>
            <param name="modelName">Name of model</param>
            <returns>Extent. Retunrns zero vector, if object does not exist</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.DrawVoxelModel(System.String,System.Numerics.Vector3Int,System.Int32,System.Numerics.Vector3Int)">
            <summary>
Draws a specific voxel model at given position, rotated at given Axis
</summary>
            <param name="modelName">Name of voxel model to draw</param>
            <param name="position">Desired position</param>
            <param name="angleInDegrease">Rotation in degrease</param>
            <param name="axis">voxel model is rotated at given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.DrawVoxelModel(System.String,System.Numerics.Vector3Int,System.Int32)">
            <summary>
Draws a specific voxel model at given position, rotated at Y-Axis
</summary>
            <param name="modelName">Name of voxel model to draw</param>
            <param name="position">Desired position</param>
            <param name="angleInDegrease">Rotation in degrease</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.DrawVoxelModel(System.String,System.Numerics.Vector3Int)">
            <summary>
Draws a specific voxel model at given position
</summary>
            <param name="modelName">Name of voxel model to draw</param>
            <param name="position">Desired position</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.UnloadAnimationSet(System.String)">
            <summary>
Unloads the AnimationSet with given name
</summary>
            <param name="modelName">name of animationset</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.UnloadVoxelModel(System.String)">
            <summary>
Unloads voxel model with given name
</summary>
            <param name="modelName">name of voxel model</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.LoadAnimationSet(System.String,System.String)">
            <summary>
Loads a full Set of VoxelModels for Animation. Every animation type has to be in its own sub folder. All sub folder should be in the folder which path is given.
</summary>
            <param name="modelName">Name of AnimationSet</param>
            <param name="folderPath">Path of main folder. Atleast one sub folder for one animation type should exist</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.LoadVoxelModel(System.String,System.String)">
            <summary>
Loads a single VoxelModel into the Storage
</summary>
            <param name="modelName">Name of VoxelModel</param>
            <param name="filePath">Path of .vox file to load</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.get_AnimationSetNames">
            <summary>
Returns list with names of all loaded animation sets
</summary>
            <returns>list with names of all loaded animation sets</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.ModelControl.AnimationSetNames">
            <summary>
Contains list with names of all loaded animation sets
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ModelControl.get_ModelNames">
            <summary>
Returns list with names of all loaded models
</summary>
            <returns>list with names of all loaded models</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.ModelControl.ModelNames">
            <summary>
Contains list with names of all loaded models
</summary>
        </member>
        <member name="T:VoxelEngine.Controllers.ModelControl">
            <summary>
The model control contains methods to store voxel files in RAM.
It also can be used to draw and manipulate plain models.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ServiceLocator.ShutdownServices">
            <summary>
Deletes all services.
</summary>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ServiceLocator.InitServices">
            <summary>
Inits every service.
</summary>
            <returns>Success/Failure</returns>
        </member>
        <member name="T:VoxelEngine.Controllers.ServiceLocator">
            <summary>
Makes sure, the controllers are initiated and deleted properly
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.ClearVoxelRenderList">
            <summary>
This funktion clears our list of visibleVoxel&gt;.
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.SetPossibleVisibleVoxels">
            <summary>
Determines all Visible Voxels.		
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.AdjustViewPoint">
            <summary>
This funktion determine all visible Chunks in the surrounding Area.
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.ChunksInTheSurroundingRadius">
            <summary>
This funktion determine all Chunks in a radius of the camera.
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.DetermineCulledData">
            <summary>
Contains the methods for executing culling
</summary>
        </member>
        <member name="M:EngineCore.Culling.Culling.SetCullingData(EngineCore.Graphics.Data.CameraData!System.Runtime.CompilerServices.IsConst*,EngineCore.VoxelVolume.Data.WorldData*,System.Int32)">
            <summary>
This funktion sets all culling data, which are needed for culling.
</summary>
            <param name="cameraToRender">CameraToRender is our camera which is needed for determine the data.</param>
            <param name="worldDataToRender">WorldToRender is the world from which we want to determine the culled data.</param>
            <param name="surroundingRadius">SurroundingRadius is the visible distance of the camera.</param>
        </member>
        <member name="M:EngineCore.Culling.Culling.GetCulledData(EngineCore.Graphics.Data.CameraData!System.Runtime.CompilerServices.IsConst*,EngineCore.VoxelVolume.Data.WorldData*,System.Int32)">
            <summary>
This function returns the culled data of a world.
</summary>
            <param name="cameraToRender">CameraToRender is our camera which is needed for determine the data.</param>
            <param name="worldDataToRender">WorldToRender is the world from which we want to determine the culled data.</param>
            <param name="surroundingRadius">SurroundingRadius is the visible distance of the camera.</param>
            <returns>The culled data.</returns>
        </member>
        <member name="F:EngineCore.Culling.Culling.List_">
            <summary>
Store for our voxels that are rendered.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Culling.VisibleChunkContainer_">
            <summary>
Store for our visible Chunks.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Culling.SurroundingChunkContainer_">
            <summary>
Store for our Chunks which are in the surrounding Radius.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Culling.WorldDataToRender_">
            <summary>
Our world we calculate the culled data from.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Culling.CameraToRender_">
            <summary>
Our camera which is the reference for our culling.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Culling.SurroundingRadius_">
            <summary>
Store for radius, how far we can see Chunks. 
</summary>
        </member>
        <member name="T:EngineCore.Culling.Culling">
            <summary>
This class determine which Chunks are in radius, which of these Chunks are
visible and which Voxels are visible.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableColorTransparency">
            <summary>
Disables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableColorTransparency">
            <summary>
Enables color palette transparency
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableRenderingWithColorPalette">
            <summary>
Disable rendering with world data and colorpalette.
Enable rendering with primitives.
This method is only for PBR.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableRenderingWithColorPalette">
            <summary>
Enable rendering with world data and colorpalette.
Disable rendering with primitives.
This method is only for PBR.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableIsFxaa">
            <summary>
Disable IsFxaa at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableIsFxaa">
            <summary>
Enable IsFxaa at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableToneMapping">
            <summary>
Disable ToneMapping at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableToneMapping">
            <summary>
Enable ToneMapping at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableBloom">
            <summary>
Disable Bloomat the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableBloom">
            <summary>
Enable Bloom at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableSkyBox">
            <summary>
Disable SkyBox at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableSkyBox">
            <summary>
Enable SkyBox at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.DisableShadows">
            <summary>
Disable Shadows at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.IRenderer.EnableShadows">
            <summary>
Enable Shadows at the selected Renderer.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.CreateErrorLog(System.String)">
            <summary>
Creates the Errorlog when the given sunname does not exist
</summary>
            <param name="sunName" />
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.GetActiveSunForPBR">
            <summary>
Retrieves the current active sun. Currently used for PBR.
</summary>
            <returns>Pointer to active sun.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.UpdateLightingUniformBuffer(EngineCore.Graphics.Buffer.UniformBuffer.Lighting*)">
            <summary>
Changes the LightingUniformBuffer to the given buffer.
</summary>
            <param name="uniformBuffer">New Lighting Uniform Buffer</param>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.GetInstance">
            <summary>
Singleton: Retrieves an instance of this class.
</summary>
            <returns>Single Object</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.GetPositionOfShadowcasters(System.String)">
            <summary>
Returns the Position of the Shadowcasters
</summary>
            <param name="sunName">Name of the Sun</param>
            <returns>Position of the Shadowcasters</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.SetPositionOfShadowcasters(System.String,System.Numerics.Vector3)">
            <summary />
            <param name="sunName">Name of the Sun</param>
            <param name="position" />
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.DeactivateShadows(System.String)">
            <summary>
Deactivates the Shadows
</summary>
            <param name="sunName">Name of the Sun</param>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.ActivateShadows(System.String)">
            <summary>
Activates the Shadows
</summary>
            <param name="sunName">Name of the Sun</param>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.ChangeColor(System.String,System.Numerics.Vector3)">
            <summary>
Changes the Color of a sun
</summary>
            <param name="sunName">Name of the Sun</param>
            <param name="color" />
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.ChangePitch(System.String,System.Single)">
            <summary>
Changes the Pitch of a sun
</summary>
            <param name="sunName">Name of the Sun</param>
            <param name="pitch" />
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.ChangeYaw(System.String,System.Single)">
            <summary>
Changes the Yaw of a sun
</summary>
            <param name="sunName">Name of the Sun</param>
            <param name="yaw">Floatvalue of the Yaw</param>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.GetSunNames">
            <summary>
Retrieves a list of all identifiers from suns registered in the engine.
</summary>
            <returns>Identifier List with all registered suns.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.SelectActiveSun(System.String)">
            <summary>
Selects the sun by name an sets it as active
</summary>
            <param name="sunName">Name of the sun</param>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.RemoveSun(System.String)">
            <summary>
Removes the sun with the given identifier from the engine.
</summary>
            <param name="sunName">Identifier</param>
            <returns>Succes/Failure</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.LightControl.CreateAndAddSun(System.String,System.Single,System.Single,System.Numerics.Vector3)">
            <summary>
Creates and adds a new sun with the given parameters
</summary>
            <param name="sunName" />
            <param name="yaw" />
            <param name="pitch" />
            <param name="color" />
            <returns />
        </member>
        <member name="P:VoxelEngine.Controllers.LightControl.ActiveSunName">
            <summary>
Returns the name of the active Sun
</summary>
        </member>
        <member name="T:VoxelEngine.Controllers.LightControl">
            <summary>
Storage and control for our lighting sources. Currently sun.
</summary>
        </member>
        <member name="M:EngineCore.VoxelRenderBlock.Bind">
            <summary>
This funktion binds the actuall buffer.
</summary>
        </member>
        <member name="M:EngineCore.VoxelRenderBlock.UpdateBlock(std.vector&lt;EngineCore.Graphics.Data.VoxelData,std.allocator&lt;EngineCore.Graphics.Data.VoxelData&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
This funktion update a block of voxels, by 
get them into the GL_ARRAY_Buffer.
</summary>
            <param name="voxels">a list of voxels stored in the data type vector</param>
        </member>
        <member name="F:EngineCore.VoxelRenderBlock.count_">
            <summary>
Storage for the count of voxels. Which are in the Buffer.
</summary>
        </member>
        <member name="F:EngineCore.VoxelRenderBlock.voxelBuffer_">
            <summary>
Storage for the id of the Buffer.
</summary>
        </member>
        <member name="F:EngineCore.VoxelRenderBlock.Id_">
            <summary>
Storage for the id of the Vertex-Array-Object (vao).
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioListener.SetListenerOrientation(System.Single,System.Single,System.Single)">
            <summary>
This function sets the orientation of the listener
</summary>
            <param name="x">X orientation of the listener</param>
            <param name="y">Y orientation of the listener</param>
            <param name="z">Z orientation of the listener</param>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioListener.SetListenerVelocity(System.Single,System.Single,System.Single)">
            <summary>
This function sets the velocity of the listener
</summary>
            <param name="x">X velocity of the listener</param>
            <param name="y">Y velocity of the listener</param>
            <param name="z">Z velocity of the listener</param>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioListener.SetListenerPosition(System.Single,System.Single,System.Single)">
            <summary>
This function sets the position of the listener
</summary>
            <param name="x">X pos of the listener</param>
            <param name="y">Y pos of the listener</param>
            <param name="z">Z pos of the listener</param>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioListener.SetListenerVolume(System.Single)">
            <summary>
This function sets the listenervolume. This could also be called Mastervolume or over-all-volume
</summary>
            <param name="volume">Mastervolume</param>
        </member>
        <member name="T:VoxelEngine.AudioSystem.AudioListener">
            <summary>
The <c>AudioListener</c> class.
The "Microfone" of the sound for the player
Position should be at the playercharacterposition or on the cameraposition
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioContext.#ctor(VoxelEngine.AudioSystem.AudioDevice)">
            <summary>
This function creates the AudioContext. It needs an Audiodevice.
</summary>
            <param name="device">Already opened Audiodevice</param>
        </member>
        <member name="T:VoxelEngine.AudioSystem.AudioContext">
            <summary>
The <c>AudioContext</c> class.
Contains the Audiolistener, the Buffers and the Sources. When a AudioContext is created, it automaticly creates also a AudioListener
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioDevice.Device">
            <summary>
Returns the Device
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioDevice.AudioDeviceName">
            <summary>
Returns the name of the audio device.
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioDevice.#ctor(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
This function opens an AudioDevice.
</summary>
            <param name="name">opens the named audiodevice</param>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioDevice.#ctor">
            <summary>
This function opens an AudioDevice.
No Parameter uses the standard audiodevice
</summary>
        </member>
        <member name="T:VoxelEngine.AudioSystem.AudioDevice">
            <summary>
The <c>AudioDevice</c> class.
Audiodevice is the used internal or external Audiosystem
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioSource.Rewind">
            <summary>
Rewinds the Source
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioSource.Stop">
            <summary>
Stops the Source
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioSource.Pause">
            <summary>
Pauses the Source
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioSource.Play">
            <summary>
Plays the Source
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.AudioSource.SetPitch(System.Single)">
            <summary>
Sets the pitch of a source
</summary>
            <param name="pitch" />
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.SourceAudioType">
            <summary>
gets the Type of an Audiosource. Can be Music, Fx or Voices
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.IsLooping">
            <summary>
Gets or sets the loop-function for a source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.LoadedBufferId">
            <summary>
Gets or sets the Buffer id of the loaded buffer in a source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.Orientation">
            <summary>
Gets or sets the orientation of a source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.Velocity">
            <summary>
Gets or sets the velocity of a source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.Position">
            <summary>
Gets or sets the position of a source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.Volume">
            <summary>
Gets or sets the volume of the source
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.AudioSource.Name">
            <summary>
Returns the Name of the Audiosource
</summary>
        </member>
        <member name="T:VoxelEngine.AudioSystem.AudioType">
            <summary>
Enum for different AudioTypes.
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.SourceControl.GetSource(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
returns the source
</summary>
            <param name="sourceName">Name of the source</param>
            <param name="audioType">Type of source, can be music, fx or voices</param>
            <returns />
        </member>
        <member name="M:VoxelEngine.AudioSystem.SourceControl.RemoveSource(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Removes a source
</summary>
            <param name="sourceName">Name of the Source</param>
            <param name="audioType">Type of source, can be music, fx or voices</param>
        </member>
        <member name="M:VoxelEngine.AudioSystem.SourceControl.AddSource(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
This function generates and adds a Source to the Sourcelist.
</summary>
            <param name="sourceName"> Name of the Source</param>
            <param name="audioType">Audiotype of the Source(Music, Fx or Voices)</param>
        </member>
        <member name="P:VoxelEngine.AudioSystem.SourceControl.VoicesVolume">
            <summary>
Gets and Sets the Volume of the Voices
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.SourceControl.FxVolume">
            <summary>
Gets and Sets the Volume of the Effects
</summary>
        </member>
        <member name="P:VoxelEngine.AudioSystem.SourceControl.MusicVolume">
            <summary>
Gets and Sets the Volume of the Music
</summary>
        </member>
        <member name="T:VoxelEngine.AudioSystem.SourceControl">
            <summary>
The <c>SourceControl</c> class.
Contains all methods for AudioSources, containing The 3 diffrent Sourcetypes: Fx, Voices and Music.
</summary>
            <remarks>
                <para>Sources are containing buffers</para>
            </remarks>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.MouseButtonDown(VoxelEngine.WrapperInput.WrappMouseButtons)">
            <summary>
Sets given key to state unpressed
</summary>
            <param name="button">Mouse button to set pressed</param>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.MouseButtonUp(VoxelEngine.WrapperInput.WrappMouseButtons)">
            <summary>
Sets given key to state unpressed
</summary>
            <param name="button">Mouse button to set unpressed</param>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.IsMouseButtonDown(VoxelEngine.WrapperInput.WrappMouseButtons)">
            <summary>
Checks if given mouse button is pressed
</summary>
            <param name="button">Mouse button to check</param>
            <returns>State of key pressed</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.IsMouseButtonUp(VoxelEngine.WrapperInput.WrappMouseButtons)">
            <summary>
Checks if given mouse button is unpressed
</summary>
            <param name="button">Mouse button to check if unpressed</param>
            <returns>State of key unpressed</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.KeyboardKeyDown(VoxelEngine.WrapperInput.WrappKeyboardKeys)">
            <summary>
Sets given key to state pressed
</summary>
            <param name="key">Key to set pressed</param>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.KeyboardKeyUp(VoxelEngine.WrapperInput.WrappKeyboardKeys)">
            <summary>
Sets given key to state unpressed
</summary>
            <param name="key">Key to set unpressed</param>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.IsKeyboardKeyDown(VoxelEngine.WrapperInput.WrappKeyboardKeys)">
            <summary>
Checks if given keyboard key is pressed
</summary>
            <param name="key">Key to check</param>
            <returns>State of key pressed</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.IsKeyboardKeyUp(VoxelEngine.WrapperInput.WrappKeyboardKeys)">
            <summary>
Checks if given keyboard key is unpressed
</summary>
            <param name="key">Key to check</param>
            <returns>State of key unpressed</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.GetCursorPosition">
            <summary>
Gets cursor position
</summary>
            <returns>cursor position</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.GetCursorDelta">
            <summary>
Gets cursor delta to previous position in last frame
</summary>
            <returns>Delta of cursor position</returns>
        </member>
        <member name="M:VoxelEngine.WrapperInput.WrapperInput.SetCursorPosition(System.ValueTuple`2{System.Double,System.Double})">
            <summary>
Sets cursor to given position
</summary>
            <param name="cursor">New cursor position</param>
        </member>
        <member name="T:VoxelEngine.WrapperInput.WrapperInput">
            <summary>
This class wrapps our input from EngineCore for Acsess in a Game.
</summary>
        </member>
        <member name="T:VoxelEngine.WrapperInput.WrappKeyboardKeys">
            <summary>
Wrapper for our KeyboardKeys
</summary>
        </member>
        <member name="T:VoxelEngine.WrapperInput.WrappMouseButtons">
            <summary>
Wrapper for our MouseButtons
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UIWindowFlags">
            <summary>
Struct for different Imgui Window Flags
</summary>
        </member>
        <member name="M:VoxelEngine.UI.UIContext.Requires``1">
            <summary>
Manages the required elements, so that only one object of each type is availble.
If the type is already registered it will cast and return it.
If the type is not registered, it will create the object of the type, register it and return it.
</summary>
            <returns>Object of equired type.</returns>
        </member>
        <member name="M:VoxelEngine.UI.UIContext.Render">
            <summary>
Calls render for Imgui
</summary>
        </member>
        <member name="M:VoxelEngine.UI.UIContext.NewFrame">
            <summary>
Calls a new frame for Imgui.
</summary>
        </member>
        <member name="P:VoxelEngine.UI.UIContext.ElementValues">
            <summary>
Property for element values of the UI.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.UIContext.Finalize">
            <summary>
Finalizer
</summary>
            <returns />
        </member>
        <member name="M:VoxelEngine.UI.UIContext.Dispose">
            <summary>
Destructor
</summary>
        </member>
        <member name="M:VoxelEngine.UI.UIContext.#ctor(EngineCore.Window.GLFWWindow!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new UIContext. Should only be called once.
</summary>
            <param name="window" />
        </member>
        <member name="T:VoxelEngine.UI.UIContext">
            <summary>
Context for our UI. Interactes as a interface to Imgui.
</summary>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Implicit(System.Numerics.Vector2Int)~System.Numerics.Vector2">
            <summary>
Converts the specified vector into Vector2.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Explicit(System.Numerics.Vector2)~System.Numerics.Vector2Int">
            <summary>
Converts the specified vector into Vector2Int.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_UnaryNegation(System.Numerics.Vector2Int)">
            <summary>
Negates the specified vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>
The negated vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Subtraction(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Subtracts the second vector from the first.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The vector that results from subtracting right from left.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Multiply(System.Int32,System.Numerics.Vector2Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The scalar value.</param>
            <param name="right">The vector.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Multiply(System.Numerics.Vector2Int,System.Int32)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Multiply(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The element-wise product vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Inequality(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a value that indicates whether two specified vectors are not equal.
</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
true if left and right are not equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Equality(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a value that indicates whether each pair of elements in two specified vectors is equal.
</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
true if left and right are equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Division(System.Numerics.Vector2Int,System.Int32)">
            <summary>
Divides the specified vector by a specified scalar value.
</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Division(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Divides the first vector by the second.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The vector that results from dividing left by right.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.op_Addition(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Adds two vectors together.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The summed vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.ToString(System.String,System.IFormatProvider)">
            <summary>
Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.
</summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.ToString(System.String)">
            <summary>
Returns the string representation of the current instance using the specified format string to format individual elements.
</summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.ToString">
            <summary>
Returns the string representation of the current instance using default formatting.
</summary>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Subtract(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Subtracts the second vector from the first.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The difference vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Negate(System.Numerics.Vector2Int)">
            <summary>
Negates a specified vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>
The negated vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Multiply(System.Numerics.Vector2Int,System.Int32)">
            <summary>
Multiplies a vector by a specified scalar.
</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Multiply(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The element-wise product vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Multiply(System.Int32,System.Numerics.Vector2Int)">
            <summary>
Multiplies a scalar value by a specified vector.
</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Min(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>
The minimized vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Max(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>
The maximized vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.LengthSquared">
            <summary>
Returns the length of the vector squared.
</summary>
            <returns>
The vector's length squared.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Length">
            <summary>
Returns the length of this vector object.
</summary>
            <returns>
The vector's length.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>
The hash code.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Equals(System.Object)">
            <summary>
Returns a value that indicates whether this instance and a specified object are equal.
</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Equals(System.Numerics.Vector2Int)">
            <summary>
Returns a value that indicates whether this instance and another vector are equal.
</summary>
            <param name="other">The other vector.</param>
            <returns>
true if the two vectors are equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Dot(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Returns the dot product of two vectors.
</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>
The dot product.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Divide(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Divides the first vector by the second.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Divide(System.Numerics.Vector2Int,System.Int32)">
            <summary>
Divides the specified vector by a specified scalar value.
</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.CopyTo(System.Int32[],System.Int32)">
            <summary>
Copies the elements of the vector to a specified array starting at a specified index position.
</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
        </member>
        <member name="M:System.Numerics.Vector2Int.CopyTo(System.Int32[])">
            <summary>
Copies the elements of the vector to a specified array.
</summary>
            <param name="array">The destination array.</param>
        </member>
        <member name="M:System.Numerics.Vector2Int.ConvertToVector2(System.Numerics.Vector2Int)">
            <summary>
Converts the specified vector into Vector2.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.ConvertFromVector2(System.Numerics.Vector2)">
            <summary>
Converts the specified vector into Vector2Int.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Clamp(System.Numerics.Vector2Int,System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Restricts a vector between a minimum and a maximum value.
</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>
The restricted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Add(System.Numerics.Vector2Int,System.Numerics.Vector2Int)">
            <summary>
Adds two vectors together.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The summed vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector2Int.Abs(System.Numerics.Vector2Int)">
            <summary>
Returns a vector whose elements are the absolute values of each of the specified vector's elements.
</summary>
            <param name="value">A vector.</param>
            <returns>
The absolute value vector.
</returns>
        </member>
        <member name="P:System.Numerics.Vector2Int.Zero">
            <summary>
Gets a vector whose 2 elements are equal to zero.
</summary>
            <value>
A vector whose two elements are equal to zero (that is, it returns the vector (0,0)).
</value>
        </member>
        <member name="P:System.Numerics.Vector2Int.UnitY">
            <summary>
Gets the vector (0,1).
</summary>
            <value>
The vector (0,1).
</value>
        </member>
        <member name="P:System.Numerics.Vector2Int.UnitX">
            <summary>
Gets the vector (1,0).
</summary>
            <value>
The vector (1,0).
</value>
        </member>
        <member name="P:System.Numerics.Vector2Int.One">
            <summary>
Gets a vector whose 2 elements are equal to one.
</summary>
            <value>
A vector whose two elements are equal to one (that is, it returns the vector (1,1)).
</value>
        </member>
        <member name="M:System.Numerics.Vector2Int.#ctor(System.Int32,System.Int32)">
            <summary>
Creates a vector whose elements have the specified values.
</summary>
            <param name="x">The value to assign to the X field.</param>
            <param name="y">The value to assign to the Y field.</param>
        </member>
        <member name="M:System.Numerics.Vector2Int.#ctor(System.Int32)">
            <summary>
Creates a new Vector2Int object whose two elements have the same value.
</summary>
            <param name="value">The value to assign to all two elements.</param>
        </member>
        <member name="F:System.Numerics.Vector2Int.Y">
            <summary>
The Y component of the vector.
</summary>
        </member>
        <member name="F:System.Numerics.Vector2Int.X">
            <summary>
The X component of the vector.
</summary>
        </member>
        <member name="T:System.Numerics.Vector2Int">
            <summary>
Represents a vector with two integer values.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.GetInstance">
            <summary>
Singleton: Get the object of this class.
</summary>
            <returns>Instance of WorldControl</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.SetRenderWorld(System.String)">
            <summary>
Sets the world which is actively rendered to the world with the given identifier.
</summary>
            <param name="worldName">Registered world in the system</param>
            <returns>Succes/Failure</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.GetWorld(System.String)">
            <summary>
Get the world object of the desired worldName registered in the system.
</summary>
            <param name="worldName" />
            <returns>IWorld Object with identifierworldName/nullptr</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.GetWorldNames">
            <summary>
Get all registered worlds in the system.
</summary>
            <returns>List containing strings of registered worlds.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.RemoveWorld(System.String)">
            <summary>
Removes the world with the desired worldName from the system.
</summary>
            <param name="worldName">Identifier of world</param>
            <returns>Succes/Failure</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.WorldControl.AddWorld(System.String,System.Numerics.Vector3Int)">
            <summary>
Adds a new world with the desired worldName to the system.
Each value of the <cref>worldSize</cref> represent the count 
of chunks at that axis. 
Don't go higher than ~100 - 150 Chunks.							// TODO Check this !!! and improve the count by performance what is possible.
</summary>
            <param name="worldName">Identifier of world</param>
            <returns>Succes/Failure</returns>
            <param name="worldSize">represent the count of chunks for all axes. </param>
        </member>
        <member name="P:VoxelEngine.Controllers.WorldControl.RenderWorld">
            <summary>
Property for the rendered world.
</summary>
        </member>
        <member name="T:VoxelEngine.Controllers.WorldControl">
            <summary>
The main <c>WorldControl</c> class.
Contains all methods for performing a basic world control system.
</summary>
            <remarks>
                <para>This class can add worlds and remove worlds to the control system.</para>
                <para>It also has a setter for the renderworld.</para>
            </remarks>
        </member>
        <member name="M:VoxelEngine.World.World.Shutdown">
            <summary>
Deletes all chunks of the world
</summary>
        </member>
        <member name="M:VoxelEngine.World.World.CalcChunkLocation(glm.vec&lt;0x3,System.Int32,0x0&gt;,System.Numerics.Vector3Int)">
            <summary>
Retrieves the chunk of the given vector.
</summary>
            <param name="positionInWorld">Int Vector in world</param>
            <returns>Int Vector of chunk</returns>
        </member>
        <member name="M:VoxelEngine.World.World.DeterminePositionInChunk(System.Numerics.Vector3Int)">
            <summary>
Retrieves the local position in the chunk of the given vector.
</summary>
            <param name="positionInWorld">Int Vector in world.</param>
            <returns>Local Position of the given vector.</returns>
        </member>
        <member name="M:VoxelEngine.World.World.DetermineChunkLocation(System.Numerics.Vector3Int)">
            <summary>
Determines the chunk which contains the given position
</summary>
            <param name="positionInWorld">positin which chunks is to be found</param>
            <returns>Coordinates of Chunk</returns>
        </member>
        <member name="M:VoxelEngine.World.World.CheckWorldBoundaries(System.Numerics.Vector3)">
            <summary>
Checks if given position is inside of world boundaris
</summary>
            <param name="position">Position to check</param>
            <returns>Is position in World?</returns>
        </member>
        <member name="M:VoxelEngine.World.World.Clear">
            <summary>
Deletes completly all Voxels in the World.
All indexes are now 0.
</summary>
        </member>
        <member name="M:VoxelEngine.World.World.CutOutVoxelObject(VoxelEngine.VoxelObjects.VoxelObject)">
            <summary>
Manipulates a complete VoxelObject in our world, by overriding all of his voxels with value 0.
</summary>
            <param name="voxelObject">is our VoxelObject, we want to override in the world</param>
        </member>
        <member name="M:VoxelEngine.World.World.DrawVoxelObject(VoxelEngine.VoxelObjects.VoxelObject)">
            <summary>
Manipulates a complete VoxelObject in our world.
By override all his Voxel with new ones. <see cref="M:VoxelEngine.World.World.DrawVoxel(System.Numerics.Vector3Int,System.Int32)" /></summary>
            <param name="voxelObject">is our VoxelObject, we want to place/override in the world</param>
            <returns>true if the VoxelObject is placed/overrided, else false</returns>
        </member>
        <member name="M:VoxelEngine.World.World.DrawVoxel(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Overrides a specific voxel in our world with that specific color value.
</summary>
            <param name="positionInWorld">Position of voxel in our world.</param>
            <param name="value">Desired color value</param>
            <returns>Succes/Failure</returns>
        </member>
        <member name="M:VoxelEngine.World.World.DeleteChunk(System.Numerics.Vector3Int)">
            <summary>
Deletes a Chunk and remove it from the world.
</summary>
            <param name="location">our location, where we want to delete the Chunk</param>
        </member>
        <member name="M:VoxelEngine.World.World.AddNewChunk(System.Numerics.Vector3Int)">
            <summary>
Add a new Chunk to our World. 
</summary>
            <param name="location">our location, where we want to add a new Chunk</param>
            <returns>true if the Chunk was added, else false</returns>
        </member>
        <member name="M:VoxelEngine.World.World.GetWorldData">
            <summary>
Getter for our chunks.
</summary>
            <returns>World chunks</returns>
        </member>
        <member name="M:VoxelEngine.World.World.#ctor(VoxelEngine.World.World!System.Runtime.CompilerServices.IsConst!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Copy-Constructor.
</summary>
        </member>
        <member name="M:VoxelEngine.World.World.Finalize">
            <summary>
Finalizer of world.
</summary>
            <returns />
        </member>
        <member name="M:VoxelEngine.World.World.Dispose">
            <summary>
Destructor of world.
</summary>
        </member>
        <member name="M:VoxelEngine.World.World.#ctor(System.Numerics.Vector3Int)">
            <summary>
Creates a new instance of World with the given Size in Chunks
</summary>
        </member>
        <member name="F:VoxelEngine.World.World.WorldSize_">
            <summary>
Store for the size of our world.
</summary>
        </member>
        <member name="F:VoxelEngine.World.World.ourWorldData_">
            <summary>
Store for our Chunks.
</summary>
        </member>
        <member name="T:VoxelEngine.World.World">
            <summary>
Represents all created Voxels. 
<see cref="F:VoxelEngine.World.World.ourWorldData_" /> contains all Chunks, which contains the Voxels.
</summary>
        </member>
        <member name="M:VoxelEngine.World.IWorld.Clear">
            <summary>
Clears the entire world with zeroes.
</summary>
        </member>
        <member name="M:VoxelEngine.World.IWorld.CutOutVoxelObject(VoxelEngine.VoxelObjects.VoxelObject)">
            <summary>
Cuts out a voxel object in the world.
</summary>
            <param name="voxelObject">The voxel object to cut out</param>
        </member>
        <member name="M:VoxelEngine.World.IWorld.DrawVoxelObject(VoxelEngine.VoxelObjects.VoxelObject)">
            <summary>
Draws a voxel object into the world.
</summary>
            <param name="voxelObject">The voxel object to draw</param>
            <returns>Returns true if at least one voxel was drawn</returns>
        </member>
        <member name="M:VoxelEngine.World.IWorld.DrawVoxel(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Draws one Voxel into the world.
</summary>
            <param name="positionInWorld">The position of the voxel</param>
            <param name="value">The value to draw</param>
            <returns>Returns true if a voxel was drawn else returns false.</returns>
        </member>
        <member name="M:VoxelEngine.World.IWorld.DeleteChunk(System.Numerics.Vector3Int)">
            <summary>
Deletes an existing chunk and removes it from the world.
</summary>
            <param name="location">The location of the chunk</param>
            <returns>Returns true if a chunk was deleted else returns false.</returns>
        </member>
        <member name="M:VoxelEngine.World.IWorld.AddNewChunk(System.Numerics.Vector3Int)">
            <summary>
Adds a new chunk at a given location on a specified side. 
</summary>
            <param name="location">The location of the new chunk</param>
            <param name="side">The side where to add the new chunk</param>
            <returns>Returns true if a new chunk was added else returns false.</returns>
        </member>
        <member name="M:VoxelEngine.World.IWorld.GetWorldData">
            <summary>
Gets a pointer to a WorldData struct containing all chunks.
</summary>
            <returns>The pointer.</returns>
        </member>
        <member name="T:VoxelEngine.World.IWorld">
            <summary>
Defines world methods that a class implements to represent a world consisting of voxels.
</summary>
        </member>
        <member name="M:EngineCore.VoxelVolume.Data.Chunk.Clear">
            <summary>
This funktion sets all Voxel of the Chunk
on value 0.
</summary>
        </member>
        <member name="M:EngineCore.VoxelVolume.Data.Chunk.At(System.Int32,System.Int32,System.Int32)">
            <summary>
This funktion returns the Voxel 
at position x,y,z in the Chunks.
</summary>
            <param name="x">the x position in the Chunk</param>
            <param name="y">the y position in the Chunk</param>
            <param name="z">the z position in the Chunk</param>
            <returns>the Voxel at x,y,z</returns>
            <summary>
This funktion returns the Voxel 
at position x,y,z in the Chunks.
But as const.
</summary>
            <param name="x">the x position in the Chunk</param>
            <param name="y">the y position in the Chunk</param>
            <param name="z">the z position in the Chunk</param>
            <returns>the Voxel as const at x,y,z</returns>
        </member>
        <member name="M:EngineCore.VoxelVolume.Data.Chunk.GetChunkCoordinates">
            <summary>
Gets the coordinates of the chunk
</summary>
            <returns>coordiantes of the chunk</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.DrawObjects">
            <summary>
Draws all active objects, which have changed recently
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.DeleteVoxelInObject(System.String,System.Numerics.Vector3Int)">
            <summary>
Delete a voxel at position in object. EXPERIMENTAL.
</summary>
            <param name="objectName">Name of object to manipulate</param>
            <param name="positionInObject">The position in the object</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.InsertVoxelIntoObject(System.String,System.Numerics.Vector3Int,System.Int32)">
            <summary>
Inserts a voxel at position in object. EXPERIMENTAL.
</summary>
            <param name="objectName">Name of object to manipulate</param>
            <param name="positionInObject">The position in the object</param>
            <param name="colorIndex">index of color</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.DeactivateObject(System.String)">
            <summary>
Deactivates Object. Will not be drawn and not be considered in collision control
</summary>
            <param name="objectName">Name of object to activate</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.ActivateObject(System.String)">
            <summary>
Activates Object. Will be drawn and considered in collision control
</summary>
            <param name="objectName">Name of object to activate</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.SetObjectDirection(System.String,System.Int32,System.Numerics.Vector3Int)">
            <summary>
Sets direction of object with given angle and axis
</summary>
            <param name="objectName">Name of object whichs direction gets set</param>
            <param name="angleInDegrease">angle of direction</param>
            <param name="axis">The object gets rotate around the given axis</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.SetObjectDirection(System.String,System.Int32)">
            <summary>
Sets direction of object with given angle
</summary>
            <param name="objectName">Name of object whichs direction gets set</param>
            <param name="angleInDegrease">angle of direction</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.RotateObject(System.String,System.Int32,System.Numerics.Vector3Int)">
            <summary>
Rotates object by given angle around given Axis
</summary>
            <param name="objectName">Name of object which gets rotated</param>
            <param name="angleInDegrease">Angle of rotation in degrease</param>
            <param name="axis">Axis around which the rotation will be executed</param>
            <returns />
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.RotateObject(System.String,System.Int32)">
            <summary>
Rotates object by given angle around the Y-Axis
</summary>
            <param name="objectName">Name of object which gets rotated</param>
            <param name="angleInDegrease">Angle of rotation in degrease</param>
            <returns>success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.SetObjectPosition(System.String,System.Numerics.Vector3Int)">
            <summary>
Moves object to an absolut position
</summary>
            <param name="objectName">Name of object which will be moved</param>
            <param name="position">New position of object</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.MoveObject(System.String,System.Numerics.Vector3Int)">
            <summary>
Moves object by given distance
</summary>
            <param name="objectName">Name of object which will be moved</param>
            <param name="distanceXYZ">Distance of movement in all 3 axes</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.GetObjectFrontVector(System.String)">
            <summary>
Returns object front vector
</summary>
            <param name="objectName">Name of object</param>
            <returns>Front vector. Retunrns zero vector, if object does not exist</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.GetObjectExtent(System.String)">
            <summary>
Returns object Extent
</summary>
            <param name="objectName">Name of object</param>
            <returns>Extent. Retunrns zero vector, if object does not exist</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.GetObjectPosition(System.String)">
            <summary>
Returns object position
</summary>
            <param name="objectName">Name of object</param>
            <returns>Position. Retunrns zero vector, if object does not exist</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.GetObjectState(System.String)">
            <summary>
Returns object IsActive state
</summary>
            <param name="objectName">Name of object</param>
            <returns>True if active. Retunrns false, if object does not exist</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.DeleteObject(System.String)">
            <summary>
Removes the voxel object by the given identifier from the system.
</summary>
            <param name="objectName">Identifier of the static object.</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.CreateEmptyObject(System.String,System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Creates an object with an empty model of given size
</summary>
            <param name="objectName">Identifier of the voxel object</param>
            <param name="initialPosition">Initial position of object. Will be adapted if smaller than extent</param>
            <param name="modelSize">Size of the model</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.CreateObjectFromAnimationSet(System.String,System.Numerics.Vector3Int,System.String)">
            <summary>
Creates a voxel object and assigns an already loaded animation set to this object.
</summary>
            <param name="objectName">Identifier of the voxel object</param>
            <param name="initialPosition">Initial position of object. Will be adapted if smaller than extent</param>
            <param name="animationSetName">Name of animation set which will be assigned to the object</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.CreateObjectFromModel(System.String,System.Numerics.Vector3Int,System.String)">
            <summary>
Creates a voxel object and assigns an already loaded model to this object.
</summary>
            <param name="objectName">Identifier of the voxel object</param>
            <param name="initialPosition">Initial position of object. Will be adapted if smaller than extent</param>
            <param name="modelName">Name of model which will be assigned to the object</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxelObjectControl.get_ObjectNames">
            <summary>
Returns list with names of all loaded models
</summary>
            <returns />
        </member>
        <member name="P:VoxelEngine.Controllers.VoxelObjectControl.ObjectNames">
            <summary>
Contains list with names of all loaded models
</summary>
        </member>
        <member name="T:VoxelEngine.Controllers.VoxelObjectControl">
            <summary>
The main <c>VoxelObjectControl</c> class.
Contains all methods for performing a basic object control system.
</summary>
            <remarks>
                <para>This class can add objects and remove objects to the control system.</para>
            </remarks>
        </member>
        <member name="M:VoxelEngine.VoxelObjects.VoxelObject.Finalize">
            <summary>
Finalizer
</summary>
            <returns />
        </member>
        <member name="M:VoxelEngine.VoxelObjects.VoxelObject.Dispose">
            <summary>
Destructor
</summary>
        </member>
        <member name="M:VoxelEngine.VoxelObjects.VoxelObject.#ctor">
            <summary>
Creates a new static object with standard values.
</summary>
        </member>
        <member name="T:VoxelEngine.VoxelObjects.VoxelObject">
            <summary>
Representation of a voxel object.
</summary>
        </member>
        <member name="M:VoxelEngine.Lights.Sun.UpdateRotation(System.Single,System.Single)">
            <summary>
Changes rotation of the sun by the given values.
</summary>
            <param name="yaw">Yaw value</param>
            <param name="pitch">Pitch value</param>
        </member>
        <member name="M:VoxelEngine.Lights.Sun.GetSunPBR">
            <summary>
Retrieves the pointer of the sun in the engine core.
</summary>
            <returns>Sun pointer in engine core.</returns>
        </member>
        <member name="P:VoxelEngine.Lights.Sun.PositionOfShadowCaster">
            <summary>
Property for the position of the shadow caster of the sun.
</summary>
        </member>
        <member name="P:VoxelEngine.Lights.Sun.IsCastingShadows">
            <summary>
Property for the shadow casting of the sun.
</summary>
        </member>
        <member name="P:VoxelEngine.Lights.Sun.Color">
            <summary>
Property for the color of this sun.
</summary>
        </member>
        <member name="P:VoxelEngine.Lights.Sun.Pitch">
            <summary>
Property for the pitch value of this sun.
</summary>
        </member>
        <member name="P:VoxelEngine.Lights.Sun.Yaw">
            <summary>
Property for the yaw value of this sun.
</summary>
        </member>
        <member name="T:VoxelEngine.Lights.Sun">
            <summary>
Used as lightning source for our engine.
Provides different values to manipulate the lightning of the sun.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxFileControl.GetNames">
            <summary>
Get all names of loaded models
</summary>
            <returns>List with names of loaded models</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxFileControl.Get(System.String)">
            <summary>
Get specific loaded model
</summary>
            <param name="name">Name of model to get</param>
            <returns>Model as VoxFile.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxFileControl.Unload(VoxelEngine.FileSystem.VoxFile)">
            <summary>
Unloads a model out of memory
</summary>
            <param name="file">Path of .vox model which contains the loaded model</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxFileControl.Unload(System.String)">
            <summary>
Unloads a model out of memory
</summary>
            <param name="name">Name of model to unload</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.VoxFileControl.Load(System.String,System.String)">
            <summary>
Loads a .vox model into memory
</summary>
            <param name="path">Path of .vox file</param>
            <param name="name">Desired name for model in memory</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.AddDefaultRotationMatrix(glm.mat&lt;0x3,0x3,System.Single,0x0&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.pair&lt;System.Int32,glm.mat&lt;0x3,0x3,System.Single,0x0&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds the DefaultRotationMatrix to the RotationMatrixDictionary
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.InitializeRotationMatrixDictionary">
            <summary>
Creates a dictionary that contains several rotation matrices for the voxelobject for a given rotation number from magicaVoxel
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.InitializeUnevenWidthUnevenDepthOffsetDictionary">
            <summary>
Creates a offset dictionary for the TranslationDirectionDistanceVector_, when the width number of the model is uneven and the depth is uneven
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.InitializeUnevenWidthEvenDepthDictionary">
            <summary>
Creates a offset dictionary for the TranslationDirectionDistanceVector_, when the width number of the model is uneven and the depth is even
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.InitializeEvenWidthUnevenDepthOffsetsDictionary">
            <summary>
Creates a offset dictionary for the TranslationDirectionDistanceVector_, when the width number of the model is even and the depth uneven
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.InitializeEvenWidthEvenDepthOffsetsDictionary">
            <summary>
Creates a offset dictionary for the TranslationDirectionDistanceVector_, when the width and the depth number of the model is even
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.FixForUnevenWidthNumbers(System.Int32)">
            <summary>
When the rotated model has a odd width number, this fix needs to be done
</summary>
            <param name="RotationNumber_">is the RotationNumber_ of the current model</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.FixForEvenWidthNumbers(System.Int32)">
            <summary>
When the rotated model has a straight width number, this fix needs to be done
</summary>
            <param name="RotationNumber_">is the RotationNumber_ of the current model</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.FixTranslationDirectionDistanceVectorAfterRotation">
            <summary>
Fixes the TranslationDirectionDistanceVector for rotated Models, because there are offsets for some rotations
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ApplyTransformOnModel(glm.mat&lt;0x3,0x3,System.Single,0x0&gt;,glm.mat&lt;0x3,0x3,System.Single,0x0&gt;)">
            <summary>
Applies a mirroring on the voxels when the VoxModel is mirrored in MagicaVoxel
</summary>
            <param name="rotationMatrix">is the RotationMatrix (calculated of a RotationNumber_) for the Model from MagicaVoxel</param>
            <param name="groupRotationMatrix">is the RotationMatrix (calculated of a RotationNumber_) for the grouped Models from MagicaVoxel</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ApplyRotationOnTranslationVector(glm.mat&lt;0x3,0x3,System.Single,0x0&gt;,glm.mat&lt;0x3,0x3,System.Single,0x0&gt;)">
            <summary>
Applies a rotation on the TranslationDirectionDistanceVector, if the model has a rotation
</summary>
            <param name="rotationMatrix">is the RotationMatrix (calculated of a RotationNumber_) for the Model from MagicaVoxel</param>
            <param name="groupRotationMatrix">is the RotationMatrix (calculated of a RotationNumber_) for the grouped Models from MagicaVoxel</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.AddGroupCopyNodes(System.Int32)">
            <summary>
Adds Nodes to the nSHPNodeList, when there are Nodes that reference of each other
</summary>
            <param name="childNodeID">is the ID of the ChildNode, the current Node is referring to</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.SetShapeNodeAttributes(System.Int32)">
            <summary>
Sets the ShapeNode (nSHP) attributes
</summary>
            <param name="ModelID_">is the ModelID from the Model in the ModelList</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.CalculateRotationNumber(glm.mat&lt;0x3,0x3,System.Single,0x0&gt;)">
            <summary>
Calculates and returns the RotationNumber for a given RotationMatrix
</summary>
            <param name="rotationMatrix">is the rotationMatrix we are calculating the RotationNumber_ from</param>
            <returns>the calculated RotationNumber</returns>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.CalculateRotationMatrix(System.Int32)">
            <summary>
Calculates and returns a RotationMatrix for a given RotationNumber_ of a model from MagicaVoxel
</summary>
            <param name="RotationNumber_">is the RotationNumber_ of a Model from MagicaVoxel</param>
            <returns>the calculated RotationMatrix</returns>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadString(System.Byte[],System.Int32,System.String@)">
            <summary>
Reads the Key and the Value of the DICT Attributes
</summary>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
            <param name="result">is the dictionary read from the DICT Attributes</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadDict(System.Byte[],System.Int32,System.Collections.Generic.Dictionary`2{System.String,System.String}@)">
            <summary>
Reads the DICT Attributes of a Chunk
</summary>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
            <param name="result">is the dictionary read from the DICT Attributes</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadUnknownChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Skips to the next Chunk if the read Chunk is unknown
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadnSHPChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the nSHP Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadnGRPChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the nGRP Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadnTRNChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the nTRN Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadMATLChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the MATL Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadMATTChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the MATT Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadRGBAChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the RGBA Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadXYZIChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the XYZI Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadSIZEChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the SIZE Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadPACKChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the PACK Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadMAINChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the MAIN Chunk of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadChunk(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the ChunkID of RawData and executes the right Chunkfunction 
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxFile.ReadFileHeader(VoxelEngine.FileSystem.VoxFile,System.Byte[],System.Int32)">
            <summary>
Reads the File Header of RawData
</summary>
            <param name="file">is the actual VoxelFile we are using</param>
            <param name="rawData">is the actual rawData we are reading from</param>
            <param name="offset">is the actual Offset</param>
        </member>
        <member name="F:VoxelEngine.FileSystem.VoxFile.groupVector">
            <summary>
Storage for the Vector of the TranslationGroupNode
to calculate the single TranslationDirectionDistanceVector_
for each model in the Group
</summary>
        </member>
        <member name="F:VoxelEngine.FileSystem.VoxFile.copyVector">
            <summary>
Storage for the TranslationDirectionDistanceVector_ from a Model
that isn't saved in the modelList_ (because it's a copy of a model)
</summary>
        </member>
        <member name="F:VoxelEngine.FileSystem.VoxFile.CounterForGroupedModels">
            <summary>
Storage for the Number of grouped Models
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxModel.SetVoxelDictionary(System.Collections.Generic.Dictionary`2{VoxelEngine.FileSystem.VoxPosition,System.Byte})">
            <summary>
Sets the VoxelDictionary of a Model
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxModel.GetVoxelDictionary">
            <summary>
Returns the VoxelDictionary of a Model as VoxelDictionary
</summary>
        </member>
        <member name="M:VoxelEngine.FileSystem.VoxModel.GetVoxelsAsDictionary">
            <summary>
Returns the VoxelDictionary of a Model as IReadOnlyVoxelDictionary
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ITrackable.Up">
            <summary>
Up vector of object which is tracked by the camera
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ITrackable.Right">
            <summary>
Side vector of object which is tracked by the camera
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ITrackable.Front">
            <summary>
Front vector of object which is tracked by the camera
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ITrackable.Orientation">
            <summary>
Orientation of object which is tracked by the camera
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ITrackable.Position">
            <summary>
Position of object which is tracked by the camera
</summary>
        </member>
        <member name="M:VoxelEngine.Cameras.ICamera.PrintCameraData">
            <summary>
Prints camera data to console
</summary>
        </member>
        <member name="M:VoxelEngine.Cameras.ICamera.Update">
            <summary>
Updates camera. Use every frame
</summary>
        </member>
        <member name="M:VoxelEngine.Cameras.ICamera.ResizeView(System.ValueTuple`2{System.Int32,System.Int32})">
            <summary>
Resizes camera view to current resolution. Use every frame
</summary>
            <param name="resolution">current resolution</param>
        </member>
        <member name="M:VoxelEngine.Cameras.ICamera.Init">
            <summary>
Initializes camera
</summary>
        </member>
        <member name="P:VoxelEngine.Cameras.ICamera.Component">
            <summary>
Contains camera component, which contains camera transform data
</summary>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.convert(glm.mat&lt;0x3,0x3,System.Single,0x0&gt;)">
            <summary>
Converts a glm matrix3x3 into System::Numerics::Matrix4x4
</summary>
            <param name="rotationMatrix">glm matrix3x3 input</param>
            <returns>System::Numerics::Matrix4x4 output</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.convert(glm.vec&lt;0x3,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Converts a glm vector3 into a System::Numerics::Vector3
</summary>
            <param name="vector">glm vector3 input</param>
            <returns>Vector3 output</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.convert(System.Numerics.Quaternion)">
            <summary>
Converts a System::Numerics::Quaternion into a glm quaternion
</summary>
            <param name="quaternion">Quaternion input</param>
            <returns>glm quaternion output</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.convert(System.Numerics.Vector3)">
            <summary>
Converts System::Numerics::Vector3 into a glm vector3
</summary>
            <param name="vector">Vector3 input</param>
            <returns>glm vector3 output</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.convert(System.Numerics.Vector3Int)">
            <summary>
Converts a System::Numerics::Vector3Int into a glm vector3
</summary>
            <param name="vector">Vector3Int input</param>
            <returns>glm vector3 output</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.Ceiling(System.Numerics.Vector3)">
            <summary>
Returns the smallest integral value that is greater than or equal to the Vector3 value.
</summary>
            <param name="value">A Vector3 value</param>
            <returns>
The smallest integral value that is greater than or equal to <paramref name="value" />. 
Note that this method returns a <see cref="T:System.Numerics.Vector3" /> instead of an integral type.
</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.Floor(System.Numerics.Vector3)">
            <summary>
Returns the largest integral value less than or equal to the specified Vector3 value.
</summary>
            <param name="value">A Vector3 value</param>
            <returns>
The largest integral value less than or equal to <paramref name="value" />. 
Note that this method returns a <see cref="T:System.Numerics.Vector3" /> instead of an integral type.
</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.Round(System.Numerics.Vector3)">
            <summary>
Rounds a Vector3 value to the nearest integral value, and rounds midpoint values to the nearest even number.
</summary>
            <param name="value">A Vector3 value to be rounded.</param>
            <returns>
The integral value nearest <paramref name="value" />. 
If the fractional component of <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.
Note that this method returns a <see cref="T:System.Numerics.Vector3" /> instead of an integral type.
</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.Clamp(System.Single,System.Single,System.Single)">
            <summary>
Restricts a floating point value between a minimum and a maximum value.
</summary>
            <param name="value">The value to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>
The restricted value.
</returns>
        </member>
        <member name="M:VoxelEngine.Math.MathExtension.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
Restricts an integer between a minimum and a maximum value.
</summary>
            <param name="value">The value to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>
The restricted value.
</returns>
        </member>
        <member name="T:VoxelEngine.Math.MathExtension">
            <summary>
Provides further math functionality.
</summary>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Implicit(System.Numerics.Vector3Int)~System.Numerics.Vector3">
            <summary>
Converts the specified vector into Vector3.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Explicit(System.Numerics.Vector3)~System.Numerics.Vector3Int">
            <summary>
Converts the specified vector into Vector3Int.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_UnaryNegation(System.Numerics.Vector3Int)">
            <summary>
Negates the specified vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>
The negated vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Subtraction(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Subtracts the second vector from the first.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The vector that results from subtracting right from left.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Multiply(System.Int32,System.Numerics.Vector3Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The scalar value.</param>
            <param name="right">The vector.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Multiply(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Multiply(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The element-wise product vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Inequality(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a value that indicates whether two specified vectors are not equal.
</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
true if left and right are not equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Equality(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a value that indicates whether each pair of elements in two specified vectors is equal.
</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
true if left and right are equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Division(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Divides the specified vector by a specified scalar value.
</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Division(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Divides the first vector by the second.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The vector that results from dividing left by right.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.op_Addition(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Adds two vectors together.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The summed vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.ToString(System.String,System.IFormatProvider)">
            <summary>
Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.
</summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.ToString(System.String)">
            <summary>
Returns the string representation of the current instance using the specified format string to format individual elements.
</summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.ToString">
            <summary>
Returns the string representation of the current instance using default formatting.
</summary>
            <returns>
The string representation of the current instance.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Subtract(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Subtracts the second vector from the first.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The difference vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Negate(System.Numerics.Vector3Int)">
            <summary>
Negates a specified vector.
</summary>
            <param name="value">The vector to negate.</param>
            <returns>
The negated vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Multiply(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Multiplies a vector by a specified scalar.
</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Multiply(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a new vector whose values are the product of each pair of elements in two specified vectors.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The element-wise product vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Multiply(System.Int32,System.Numerics.Vector3Int)">
            <summary>
Multiplies a scalar value by a specified vector.
</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>
The scaled vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Min(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>
The minimized vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Max(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.
</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>
The maximized vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.LengthSquared">
            <summary>
Returns the length of the vector squared.
</summary>
            <returns>
The vector's length squared.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Length">
            <summary>
Returns the length of this vector object.
</summary>
            <returns>
The vector's length.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.GetHashCode">
            <summary>
Returns the hash code for this instance.
</summary>
            <returns>
The hash code.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Equals(System.Object)">
            <summary>
Returns a value that indicates whether this instance and a specified object are equal.
</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Equals(System.Numerics.Vector3Int)">
            <summary>
Returns a value that indicates whether this instance and another vector are equal.
</summary>
            <param name="other">The other vector.</param>
            <returns>
true if the two vectors are equal; otherwise, false.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Dot(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Returns the dot product of two vectors.
</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>
The dot product.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Divide(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Divides the first vector by the second.
</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Divide(System.Numerics.Vector3Int,System.Int32)">
            <summary>
Divides the specified vector by a specified scalar value.
</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>
The vector that results from the division.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Cross(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Computes the cross product of two vectors.
</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>
The cross product.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.CopyTo(System.Int32[],System.Int32)">
            <summary>
Copies the elements of the vector to a specified array starting at a specified index position.
</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
        </member>
        <member name="M:System.Numerics.Vector3Int.CopyTo(System.Int32[])">
            <summary>
Copies the elements of the vector to a specified array.
</summary>
            <param name="array">The destination array.</param>
        </member>
        <member name="M:System.Numerics.Vector3Int.ConvertToVector3(System.Numerics.Vector3Int)">
            <summary>
Converts the specified vector into Vector3.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.ConvertFromVector3(System.Numerics.Vector3)">
            <summary>
Converts the specified vector into Vector3Int.
</summary>
            <param name="vector">The vector to convert.</param>
            <returns>
The converted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Clamp(System.Numerics.Vector3Int,System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Restricts a vector between a minimum and a maximum value.
</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>
The restricted vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Add(System.Numerics.Vector3Int,System.Numerics.Vector3Int)">
            <summary>
Adds two vectors together.
</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>
The summed vector.
</returns>
        </member>
        <member name="M:System.Numerics.Vector3Int.Abs(System.Numerics.Vector3Int)">
            <summary>
Returns a vector whose elements are the absolute values of each of the specified vector's elements.
</summary>
            <param name="value">A vector.</param>
            <returns>
The absolute value vector.
</returns>
        </member>
        <member name="P:System.Numerics.Vector3Int.Zero">
            <summary>
Gets a vector whose 3 elements are equal to zero.
</summary>
            <value>
A vector whose three elements are equal to zero (that is, it returns the vector (0,0,0).
</value>
        </member>
        <member name="P:System.Numerics.Vector3Int.UnitZ">
            <summary>
Gets the vector (0,0,1).
</summary>
            <value>
The vector (0,0,1).
</value>
        </member>
        <member name="P:System.Numerics.Vector3Int.UnitY">
            <summary>
Gets the vector (0,1,0).
</summary>
            <value>
The vector (0,1,0).
</value>
        </member>
        <member name="P:System.Numerics.Vector3Int.UnitX">
            <summary>
Gets the vector (1,0,0).
</summary>
            <value>
The vector (1,0,0).
</value>
        </member>
        <member name="P:System.Numerics.Vector3Int.One">
            <summary>
Gets a vector whose 3 elements are equal to one.
</summary>
            <value>
A vector whose three elements are equal to one (that is, it returns the vector (1,1,1)).
</value>
        </member>
        <member name="M:System.Numerics.Vector3Int.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
Creates a vector whose elements have the specified values.
</summary>
            <param name="x">The value to assign to the X field.</param>
            <param name="y">The value to assign to the Y field.</param>
            <param name="z">The value to assign to the Z field.</param>
        </member>
        <member name="M:System.Numerics.Vector3Int.#ctor(System.Numerics.Vector2Int,System.Int32)">
            <summary>
Creates a new Vector3Int object from the specified Vector2Int object and the specified value.
</summary>
            <param name="value">The vector with two elements.</param>
            <param name="z">The additional value to assign to the Z field.</param>
        </member>
        <member name="M:System.Numerics.Vector3Int.#ctor(System.Int32)">
            <summary>
Creates a new Vector3Int object whose three elements have the same value.
</summary>
            <param name="value">The value to assign to all three elements.</param>
        </member>
        <member name="F:System.Numerics.Vector3Int.Z">
            <summary>
The Z component of the vector.
</summary>
        </member>
        <member name="F:System.Numerics.Vector3Int.Y">
            <summary>
The Y component of the vector.
</summary>
        </member>
        <member name="F:System.Numerics.Vector3Int.X">
            <summary>
The X component of the vector.
</summary>
        </member>
        <member name="T:System.Numerics.Vector3Int">
            <summary>
Represents a vector with three integer values.
</summary>
        </member>
        <member name="T:EngineCore.Math.Vec3KeyFuncs">
            <summary>
This class represents functions for C++-Libraries.
For more see the general documentation of C++ at https://en.cppreference.com/w/
</summary>
        </member>
        <member name="D:glm.lowp_uvec1">
1 component vector of unsigned integer values.

@see ext_vector_uint1_precision
</member>
        <member name="D:glm.mediump_uvec1">
1 component vector of unsigned integer values.

@see ext_vector_uint1_precision
</member>
        <member name="D:glm.highp_uvec1">
@addtogroup ext_vector_uint1_precision
@{
1 component vector of unsigned integer values.

@see ext_vector_uint1_precision
</member>
        <member name="D:glm.uvec1">
@addtogroup ext_vector_uint1
@{
1 component vector of unsigned integer numbers.
</member>
        <member name="D:glm.lowp_ivec1">
1 component vector of signed integer values.
</member>
        <member name="D:glm.mediump_ivec1">
1 component vector of signed integer values.
</member>
        <member name="D:glm.highp_ivec1">
@addtogroup ext_vector_int1_precision
@{
1 component vector of signed integer values.
</member>
        <member name="D:glm.ivec1">
@addtogroup ext_vector_int1
@{
1 component vector of signed integer numbers.
</member>
        <member name="D:glm.lowp_dvec1">
1 component vector of double-precision floating-point numbers using low precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.mediump_dvec1">
1 component vector of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.highp_dvec1">
@addtogroup ext_vector_double1_precision
@{
1 component vector of double-precision floating-point numbers using high precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.dvec1">
@addtogroup ext_vector_double1
@{
1 components vector of double-precision floating-point numbers.
</member>
        <member name="D:glm.lowp_vec1">
1 component vector of single-precision floating-point numbers using low precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.mediump_vec1">
1 component vector of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.highp_vec1">
@addtogroup ext_vector_float1_precision
@{
1 component vector of single-precision floating-point numbers using high precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.vec1">
@addtogroup ext_vector_float1
@{
1 components vector of single-precision floating-point numbers.
</member>
        <member name="D:glm.lowp_bvec1">
1 component vector of bool values.
</member>
        <member name="D:glm.mediump_bvec1">
1 component vector of bool values.
</member>
        <member name="D:glm.highp_bvec1">
@addtogroup ext_vector_bool1_precision
@{
1 component vector of bool values.
</member>
        <member name="D:glm.bvec1">
@addtogroup ext_vector_bool1
@{
1 components vector of boolean.
</member>
        <member name="M:EngineCore.Input.InputSystem.SetMouse(EngineCore.Input.Mouse.MouseAccessor*)">
            <summary>
Sets a mouse accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.GetMouse">
            <summary>
Gets a mouse accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.SetCursor(EngineCore.Input.Cursor.CursorAccessor*)">
            <summary>
Sets a cursor accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.GetCursor">
            <summary>
Gets a cursor accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.SetKeyboard(EngineCore.Input.Keyboard.KeyboardAccessor*)">
            <summary>
Sets a keyboard accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.GetKeyboard">
            <summary>
Gets a keyboard accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.NewFrame">
            <summary>
Sets a new frame for the input system .
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.Dispose">
            <summary>
Disposes the input system.
</summary>
        </member>
        <member name="M:EngineCore.Input.InputSystem.#ctor(EngineCore.Window.GLFWWindow*)">
            <summary>
Creates a new input system object from the specified window.
</summary>
            <param name="window">
The window to use.
</param>
        </member>
        <member name="T:EngineCore.Input.InputSystem">
            <summary>
Represents an input system.
</summary>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.ButtonDown(EngineCore.Input.Mouse.MouseButtons)">
            <summary>
Tracking the given button as pressed.
The given button is now tracked as pressed. Also if the given butoon was not previously pressed it is tracked as a new one.
</summary>
            <param name="button">The button to track.</param>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.ButtonUp(EngineCore.Input.Mouse.MouseButtons)">
            <summary>
Tracking the given button as released.
The given button is now tracked as released. Also clears pressed and new state of the button.
</summary>
            <param name="button">The button to track.</param>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.IsButtonDown(EngineCore.Input.Mouse.MouseButtons)">
            <summary>
Checks if the given mouse button is down or rather if the given button is pressed.
</summary>
            <param name="button">The button to check for.</param>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.IsButtonUp(EngineCore.Input.Mouse.MouseButtons)">
            <summary>
Checks if the given mouse button is up or rather if the given button is not pressed.
</summary>
            <param name="button">The button to check for.</param>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.NewFrame">
            <summary>
Sets a new frame for the mouse accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.SetScroll(System.Double)">
            <summary>
Sets the current scroll in a frame.
</summary>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.GetScroll">
            <summary>
Gets the current scroll in a frame.
</summary>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.Dispose">
            <summary>
Disposes the mouse accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Mouse.MouseAccessor.#ctor(EngineCore.Window.GLFWWindow*)">
            <summary>
Creates a new mouse accessor object from the specified window.
</summary>
            <param name="window">The window to use.</param>
        </member>
        <member name="T:EngineCore.Input.Mouse.MouseAccessor">
            <summary>
Represents a mouse access to a window.
</summary>
        </member>
        <member name="T:EngineCore.Input.Mouse.MouseButtons">
            <summary>
Represents all used mouse buttons.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.GetDeltaY_">
            <summary>
Gets the delta Y between two frames.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.GetDeltaX_">
            <summary>
Gets the delta X between two frames.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.SetY(System.Double)">
            <summary>
Sets the current Y position of the cursor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.GetY">
            <summary>
Gets the current Y position of the cursor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.SetX(System.Double)">
            <summary>
Sets the current X position of the cursor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.GetX">
            <summary>
Gets the current X position of the cursor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.NewFrame">
            <summary>
Sets a new frame for the cursor accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.Dispose">
            <summary>
Disposes the cursor accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Cursor.CursorAccessor.#ctor(EngineCore.Window.GLFWWindow*)">
            <summary>
Creates a new cursor accessor object from the specified window.
</summary>
            <param name="window">The window to use.</param>
        </member>
        <member name="T:EngineCore.Input.Cursor.CursorAccessor">
            <summary>
Represents a cursor access to a window.
</summary>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.KeyDown(EngineCore.Input.Keyboard.KeyboardKeys)">
            <summary>
Tracking the given key as pressed.
The given key is now tracked as pressed. Also if the given key was not previously pressed it is tracked as a new one.
</summary>
            <param name="key">The key to track.</param>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.KeyUp(EngineCore.Input.Keyboard.KeyboardKeys)">
            <summary>
Tracking the given key as released.
The given key is now tracked as released. Also clears pressed and new state of the key.
</summary>
            <param name="key">The key to track.</param>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.IsKeyDown(EngineCore.Input.Keyboard.KeyboardKeys)">
            <summary>
Checks if the given key is down or rather if the given key is pressed.
</summary>
            <param name="key">The key to check for.</param>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.IsKeyUp(EngineCore.Input.Keyboard.KeyboardKeys)">
            <summary>
Checks if the given key is up or rather if the given key is not pressed.
</summary>
            <param name="key">The key to check for.</param>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.NewFrame">
            <summary>
Sets a new frame for the keyboard accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.Dispose">
            <summary>
Constructor of the keyboard accessor.
</summary>
        </member>
        <member name="M:EngineCore.Input.Keyboard.KeyboardAccessor.#ctor(EngineCore.Window.GLFWWindow*)">
            <summary>
Creates a new keyboard accessor object from the specified window.
</summary>
            <param name="window">The window to use.</param>
        </member>
        <member name="T:EngineCore.Input.Keyboard.KeyboardAccessor">
            <summary>
Represents a keyboard access to a window.
</summary>
        </member>
        <member name="T:EngineCore.Input.Keyboard.KeyboardKeys">
            <summary>
Represents all used keyboard keys.

The keys are specified with the US keyboard layout in mind.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SwapBuffers">
            <summary>
Swaps the currently displayed buffer.

Should only be used by the engine!
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.PollEvents">
            <summary>
Polls alle events in the window event queue.

Should only be used by the engine!
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SetHeightOfWindow(System.Int32)">
            <summary>
Sets the current window height.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetHeighthOfWindow">
            <summary>
Gets the current window height.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SetWidthOfWindow(System.Int32)">
            <summary>
Sets the current window width.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetWidthOfWindow">
            <summary>
Gets the current window width.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SetTitle(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;)">
            <summary>
Sets the current window title.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetTitle">
            <summary>
Gets the current window title.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SetResolution(std.tuple&lt;System.Int32,System.Int32&gt;)">
            <summary>
Sets the current window resolution.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetResolution">
            <summary>
Gets the current window resolution.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetWindowPointer">
            <summary>
Gets the GLFWwindow pointer used by GLFWWindow.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.GetWindowShouldClose">
            <summary>
Describes if the window is opened or closed.
<returns>True if the window is opened, else false.</returns></summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.SetWindowShouldClose(System.Boolean)">
            <summary>
Describes wether the window should be closed and thus the engines needs to shutdown or 
wether the engine should keep going.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.FramebufferSizeCallback(System.Int32,System.Int32)">
            <summary>
This function change the windowsize.
</summary>
            <param name="width">the new width of the window</param>
            <param name="height">the new height of the window</param>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.ConfigureWindow">
            <summary>
This function configure our window.
</summary>
        </member>
        <member name="M:EngineCore.Window.GLFWWindow.#ctor(System.Int32,System.Int32,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;)">
            <summary>
Creates a new GLFWWindow object from the specified width, height and text.
</summary>
            <param name="width">The width to use.</param>
            <param name="height">The height to use.</param>
            <param name="title">The title to use.</param>
        </member>
        <member name="F:EngineCore.Window.GLFWWindow.WindowResolution_">
            <summary>
Represent the resolution of a GLFWWindow.
first parameter of the tuple is the width of the window,
second parameter is the height of the window.
</summary>
        </member>
        <member name="T:EngineCore.Window.GLFWWindow">
            <summary>
Represents a window using glfw 3.3.
</summary>
        </member>
        <member name="M:EngineCore.Wrapper.WLog.Logger.LogMessage(EngineCore.Wrapper.WLog.MessageType,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
This function print a spd-log-message in the console.
</summary>
            <param name="type">the type of the message</param>
            <param name="message">the content of the message</param>
        </member>
        <member name="D:glm.highp_dquat">
Quaternion of high double-qualifier floating-point numbers using high precision arithmetic in term of ULPs.

@see ext_quaternion_double_precision
</member>
        <member name="D:glm.mediump_dquat">
Quaternion of medium double-qualifier floating-point numbers using high precision arithmetic in term of ULPs.

@see ext_quaternion_double_precision
</member>
        <member name="D:glm.lowp_dquat">
@addtogroup ext_quaternion_double_precision
@{
Quaternion of double-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see ext_quaternion_double_precision
</member>
        <member name="D:glm.dquat">
@addtogroup ext_quaternion_double
@{
Quaternion of double-precision floating-point numbers.
</member>
        <member name="D:glm.highp_quat">
Quaternion of single-precision floating-point numbers using high precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.mediump_quat">
Quaternion of single-precision floating-point numbers using high precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.lowp_quat">
@addtogroup ext_quaternion_float_precision
@{
Quaternion of single-precision floating-point numbers using high precision arithmetic in term of ULPs.
</member>
        <member name="D:glm.quat">
@addtogroup ext_quaternion_float
@{
Quaternion of single-precision floating-point numbers.
</member>
        <member name="T:_SETJMP_FLOAT128">
@ref core
</member>
        <member name="M:glm.unpackHalf2x16(System.UInt32)">
Returns a two-component floating-point vector with components obtained by unpacking a 32-bit unsigned integer into a pair of 16-bit values,
interpreting those values as 16-bit floating-point numbers according to the OpenGL Specification,
and converting them to 32-bit floating-point values.
The first component of the vector is obtained from the 16 least-significant bits of v;
the second component is obtained from the 16 most-significant bits of v.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackHalf2x16.xml">GLSL unpackHalf2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packHalf2x16(glm.vec&lt;0x2,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns an unsigned integer obtained by converting the components of a two-component floating-point vector
to the 16-bit floating-point representation found in the OpenGL Specification,
and then packing these two 16- bit integers into a 32-bit unsigned integer.
The first vector component specifies the 16 least-significant bits of the result;
the second component specifies the 16 most-significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packHalf2x16.xml">GLSL packHalf2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.unpackDouble2x32(System.Double)">
Returns a two-component unsigned integer vector representation of v.
The bit-level representation of v is preserved.
The first component of the vector contains the 32 least significant bits of the double;
the second component consists the 32 most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackDouble2x32.xml">GLSL unpackDouble2x32 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packDouble2x32(glm.vec&lt;0x2,System.UInt32,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a double-qualifier value obtained by packing the components of v into a 64-bit value.
If an IEEE 754 Inf or NaN is created, it will not signal, and the resulting floating point value is unspecified.
Otherwise, the bit- level representation of v is preserved.
The first vector component specifies the 32 least significant bits;
the second component specifies the 32 most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packDouble2x32.xml">GLSL packDouble2x32 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.unpackSnorm4x8(System.UInt32)">
First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers.
Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.

The conversion for unpacked fixed-point value f to floating point is done as follows:
unpackSnorm4x8: clamp(f / 127.0, -1, +1)

The first component of the returned vector will be extracted from the least significant bits of the input;
the last component will be extracted from the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm4x8.xml">GLSL unpackSnorm4x8 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.unpackUnorm4x8(System.UInt32)">
First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers.
Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.

The conversion for unpacked fixed-point value f to floating point is done as follows:
unpackUnorm4x8: f / 255.0

The first component of the returned vector will be extracted from the least significant bits of the input;
the last component will be extracted from the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm4x8.xml">GLSL unpackUnorm4x8 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.unpackSnorm2x16(System.UInt32)">
First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers.
Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.

The conversion for unpacked fixed-point value f to floating point is done as follows:
unpackSnorm2x16: clamp(f / 32767.0, -1, +1)

The first component of the returned vector will be extracted from the least significant bits of the input;
the last component will be extracted from the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackSnorm2x16.xml">GLSL unpackSnorm2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.unpackUnorm2x16(System.UInt32)">
First, unpacks a single 32-bit unsigned integer p into a pair of 16-bit unsigned integers, four 8-bit unsigned integers, or four 8-bit signed integers.
Then, each component is converted to a normalized floating-point value to generate the returned two- or four-component vector.

The conversion for unpacked fixed-point value f to floating point is done as follows:
unpackUnorm2x16: f / 65535.0

The first component of the returned vector will be extracted from the least significant bits of the input;
the last component will be extracted from the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/unpackUnorm2x16.xml">GLSL unpackUnorm2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packSnorm4x8(glm.vec&lt;0x4,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values.
Then, the results are packed into the returned 32-bit unsigned integer.

The conversion for component c of v to fixed point is done as follows:
packSnorm4x8:	round(clamp(c, -1, +1) * 127.0)

The first component of the vector will be written to the least significant bits of the output;
the last component will be written to the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm4x8.xml">GLSL packSnorm4x8 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packUnorm4x8(glm.vec&lt;0x4,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values.
Then, the results are packed into the returned 32-bit unsigned integer.

The conversion for component c of v to fixed point is done as follows:
packUnorm4x8:	round(clamp(c, 0, +1) * 255.0)

The first component of the vector will be written to the least significant bits of the output;
the last component will be written to the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm4x8.xml">GLSL packUnorm4x8 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packSnorm2x16(glm.vec&lt;0x2,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values.
Then, the results are packed into the returned 32-bit unsigned integer.

The conversion for component c of v to fixed point is done as follows:
packSnorm2x16: round(clamp(v, -1, +1) * 32767.0)

The first component of the vector will be written to the least significant bits of the output;
the last component will be written to the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packSnorm2x16.xml">GLSL packSnorm2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.packUnorm2x16(glm.vec&lt;0x2,System.Single,0x0&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
@addtogroup core_func_packing
@{
First, converts each component of the normalized floating-point value v into 8- or 16-bit integer values.
Then, the results are packed into the returned 32-bit unsigned integer.

The conversion for component c of v to fixed point is done as follows:
packUnorm2x16: round(clamp(c, 0, +1) * 65535.0)

The first component of the vector will be written to the least significant bits of the output;
the last component will be written to the most significant bits.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/packUnorm2x16.xml">GLSL packUnorm2x16 man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.4 Floating-Point Pack and Unpack Functions</a></member>
        <member name="M:glm.uintBitsToFloat(System.UInt32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a floating-point value corresponding to a
unsigned integer encoding of a floating-point value.
If an inf or NaN is passed in, it will not signal, and the
resulting floating point value is unspecified. Otherwise,
the bit-level representation is preserved.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/uintBitsToFloat.xml">GLSL uintBitsToFloat man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</a></member>
        <member name="M:glm.intBitsToFloat(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a floating-point value corresponding to a signed
integer encoding of a floating-point value.
If an inf or NaN is passed in, it will not signal, and the
resulting floating point value is unspecified. Otherwise,
the bit-level representation is preserved.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/intBitsToFloat.xml">GLSL intBitsToFloat man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</a></member>
        <member name="M:glm.floatBitsToUint(System.Single!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a unsigned integer value representing
the encoding of a floating-point value. The floatingpoint
value's bit-level representation is preserved.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToUint.xml">GLSL floatBitsToUint man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</a></member>
        <member name="M:glm.floatBitsToInt(System.Single!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a signed integer value representing
the encoding of a floating-point value. The floating-point
value's bit-level representation is preserved.

@see <a href="http://www.opengl.org/sdk/docs/manglsl/xhtml/floatBitsToInt.xml">GLSL floatBitsToInt man page</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 8.3 Common Functions</a></member>
        <member name="D:glm.highp_mat4x4">
4 columns of 4 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat4x4">
4 columns of 4 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat4x4">
4 columns of 4 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_mat4">
4 columns of 4 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat4">
4 columns of 4 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat4">
@addtogroup core_matrix_precision
@{
4 columns of 4 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat4">
4 columns of 4 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.mat4x4">
@ingroup core_matrix
@{
4 columns of 4 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat4x4">
4 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat4x4">
4 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat4x4">
4 columns of 4 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dmat4">
4 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat4">
4 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat4">
@addtogroup core_matrix_precision
@{
4 columns of 4 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat4">
4 columns of 4 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.dmat4x4">
@addtogroup core_matrix
@{
4 columns of 4 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat4x3">
4 columns of 3 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat4x3">
4 columns of 3 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat4x3">
@addtogroup core_matrix_precision
@{
4 columns of 3 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat4x3">
@addtogroup core_matrix
@{
4 columns of 3 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat4x3">
4 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat4x3">
4 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat4x3">
@addtogroup core_matrix_precision
@{
4 columns of 3 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat4x3">
@addtogroup core_matrix
@{
4 columns of 3 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat4x2">
4 columns of 2 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat4x2">
4 columns of 2 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat4x2">
@addtogroup core_matrix_precision
@{
4 columns of 2 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat4x2">
@addtogroup core_matrix
@{
4 columns of 2 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat4x2">
4 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat4x2">
4 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat4x2">
@addtogroup core_matrix_precision
@{
4 columns of 2 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat4x2">
@addtogroup core_matrix
@{
4 columns of 2 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat3x4">
3 columns of 4 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat3x4">
3 columns of 4 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat3x4">
@addtogroup core_matrix_precision
@{
3 columns of 4 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat3x4">
@addtogroup core_matrix
@{
3 columns of 4 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat3x4">
3 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat3x4">
3 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat3x4">
@addtogroup core_matrix_precision
@{
3 columns of 4 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat3x4">
@addtogroup core_matrix
@{
3 columns of 4 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat3x3">
3 columns of 3 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat3x3">
3 columns of 3 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat3x3">
3 columns of 3 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_mat3">
3 columns of 3 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat3">
3 columns of 3 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat3">
@addtogroup core_matrix_precision
@{
3 columns of 3 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat3">
3 columns of 3 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.mat3x3">
@addtogroup core_matrix
@{
3 columns of 3 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat3x3">
3 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat3x3">
3 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat3x3">
3 columns of 3 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dmat3">
3 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat3">
3 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat3">
@addtogroup core_matrix_precision
@{
3 columns of 3 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat3">
3 columns of 3 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.dmat3x3">
@addtogroup core_matrix
@{
3 columns of 3 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat3x2">
3 columns of 2 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat3x2">
3 columns of 2 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat3x2">
@addtogroup core_matrix_precision
@{
3 columns of 2 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat3x2">
@addtogroup core
@{
3 columns of 2 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat3x2">
3 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat3x2">
3 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat3x2">
@addtogroup core_matrix_precision
@{
3 columns of 2 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat3x2">
@addtogroup core_matrix
@{
3 columns of 2 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat2x4">
2 columns of 4 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat2x4">
2 columns of 4 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat2x4">
@addtogroup core_matrix_precision
@{
2 columns of 4 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat2x4">
@addtogroup core_matrix
@{
2 columns of 4 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat2x4">
2 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat2x4">
2 columns of 4 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat2x4">
@addtogroup core_matrix_precision
@{
2 columns of 4 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat2x4">
@addtogroup core_matrix
@{
2 columns of 4 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat2x3">
2 columns of 3 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat2x3">
2 columns of 3 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat2x3">
@addtogroup core_matrix_precision
@{
2 columns of 3 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat2x3">
@addtogroup core_matrix
@{
2 columns of 3 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat2x3">
2 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat2x3">
2 columns of 3 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat2x3">
@addtogroup core_matrix_precision
@{
2 columns of 3 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat2x3">
@addtogroup core_matrix
@{
2 columns of 3 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_mat2x2">
2 columns of 2 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat2x2">
2 columns of 2 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat2x2">
2 columns of 2 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_mat2">
2 columns of 2 components matrix of single-precision floating-point numbers using high precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_mat2">
2 columns of 2 components matrix of single-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_mat2">
@addtogroup core_matrix_precision
@{
2 columns of 2 components matrix of single-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mat2">
2 columns of 2 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.mat2x2">
@addtogroup core_matrix
@{
2 columns of 2 components matrix of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.highp_dmat2x2">
2 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat2x2">
2 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat2x2">
2 columns of 2 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dmat2">
2 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dmat2">
2 columns of 2 components matrix of double-precision floating-point numbers using medium precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.lowp_dmat2">
@addtogroup core_matrix_precision
@{
2 columns of 2 components matrix of double-precision floating-point numbers using low precision arithmetic in term of ULPs.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dmat2">
2 columns of 2 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.dmat2x2">
@addtogroup core_matrix
@{
2 columns of 2 components matrix of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.6 Matrices</a></member>
        <member name="D:glm.lowp_uvec3">
3 components vector of low qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_uvec3">
3 components vector of medium qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_uvec3">
@addtogroup core_vector_precision
@{
3 components vector of high qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.uvec3">
@addtogroup core_vector
@{
3 components vector of unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_ivec3">
3 components vector of low qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_ivec3">
3 components vector of medium qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_ivec3">
@addtogroup core_vector_precision
@{
3 components vector of high qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.ivec3">
@addtogroup core_vector
@{
3 components vector of signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_dvec3">
3 components vector of low double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dvec3">
3 components vector of medium double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dvec3">
@addtogroup core_vector_precision
@{
3 components vector of high double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dvec3">
@addtogroup core_vector
@{
3 components vector of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_vec3">
3 components vector of low single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_vec3">
3 components vector of medium single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_vec3">
@addtogroup core_vector_precision
@{
3 components vector of high single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.vec3">
@addtogroup core_vector
@{
3 components vector of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_bvec3">
3 components vector of low qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_bvec3">
3 components vector of medium qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_bvec3">
@addtogroup core_vector_precision
@{
3 components vector of high qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.bvec3">
@addtogroup core_vector
@{
3 components vector of boolean.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_uvec2">
2 components vector of low qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_uvec2">
2 components vector of medium qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_uvec2">
@addtogroup core_vector_precision
@{
2 components vector of high qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.uvec2">
@addtogroup core_vector
@{
2 components vector of unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_ivec2">
2 components vector of low qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_ivec2">
2 components vector of medium qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_ivec2">
@addtogroup core_vector_precision
@{
2 components vector of high qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.ivec2">
@addtogroup core_vector
@{
2 components vector of signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_dvec2">
2 components vector of low double-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dvec2">
2 components vector of medium double-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dvec2">
@addtogroup core_vector_precision
@{
2 components vector of high double-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dvec2">
@addtogroup core_vector
@{
2 components vector of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_vec2">
2 components vector of low single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_vec2">
2 components vector of medium single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_vec2">
@addtogroup core_vector_precision
@{
2 components vector of high single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.vec2">
@addtogroup core_vector
@{
2 components vector of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_bvec2">
2 components vector of low qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_bvec2">
2 components vector of medium qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_bvec2">
@addtogroup core_vector_precision
@{
2 components vector of high qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.bvec2">
@addtogroup core_vector
@{
2 components vector of boolean.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_uvec4">
4 components vector of low qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_uvec4">
4 components vector of medium qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_uvec4">
@addtogroup core_vector_precision
@{
4 components vector of high qualifier unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.uvec4">
@addtogroup core_vector
@{
4 components vector of unsigned integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_ivec4">
4 components vector of low qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_ivec4">
4 components vector of medium qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_ivec4">
@addtogroup core_vector_precision
@{
4 components vector of high qualifier signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.ivec4">
@addtogroup core_vector
@{
4 components vector of signed integer numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_dvec4">
4 components vector of low double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_dvec4">
4 components vector of medium double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_dvec4">
@addtogroup core_vector_precision
@{
4 components vector of high double-qualifier floating-point numbers.
There is no guarantee on the actual qualifier.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.dvec4">
@addtogroup core_vector
@{
4 components vector of double-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_vec4">
4 components vector of low single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_vec4">
4 components vector of medium single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_vec4">
@addtogroup core_vector_precision
@{
4 components vector of high single-qualifier floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.vec4">
@addtogroup core_vector
@{
4 components vector of single-precision floating-point numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="D:glm.lowp_bvec4">
4 components vector of low qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.mediump_bvec4">
4 components vector of medium qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.highp_bvec4">
@addtogroup core_vector_precision
@{
4 components vector of high qualifier bool numbers.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a>
@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.7.2 Precision Qualifier</a></member>
        <member name="D:glm.bvec4">
@addtogroup core_vector
@{
4 components vector of boolean.

@see <a href="http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf">GLSL 4.20.8 specification, section 4.1.5 Vectors</a></member>
        <member name="T:glm.qualifier">
Qualify GLM types in term of alignment (packed, aligned) and precision in term of ULPs (lowp, mediump, highp)
</member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.EndGroup(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
unlock horizontal starting position and capture the whole group bounding box into one "item" (so you can use IsItemHovered() or layout primitives such as SameLine() on whole group, etc.)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.BeginGroup(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
ock horizontal starting position
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Unindent(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
Move content position back to the left.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="indentWidth">Width of unindent</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Unindent(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Move content position back to the left.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Indent(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
Move content position toward the right.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="indentWidth">Width of indent</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Indent(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Move content position toward the right.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Dummy(VoxelEngine.UI.UIContext,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Adds a dummy item of given size. unlike InvisibleButton(), Dummy() won't take the mouse click or be navigable into.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of dummy</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Spacing(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Vertical spacing between lines.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.NewLine(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Undos a SameLine()
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.SameLine(VoxelEngine.UI.UIContext,System.Boolean,System.Single,System.Single)">
            <summary>
Draws the next state element in the same line as the previous element.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="offsetFromStartX">In window coordinates</param>
            <param name="spacing">horizontal spacing between elements</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.SameLine(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
Draws the next state element in the same line as the previous element.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="offsetFromStartX">In window coordinates</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.SameLine(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Draws the next state element in the same line as the previous element.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetLayoutExtension.Seperator(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Creates a seperating Line.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetLayoutExtension">
            <summary>
Contains elements for widget layouts.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UIHoveredFlags">
            <summary>
Struct for different Imgui Hovered Flags
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowFocus(VoxelEngine.UI.UIContext)">
            <summary>
Sets focus on current window.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowFocus(VoxelEngine.UI.UIContext,System.String)">
            <summary>
Sets focus on window which is identified by name.
</summary>
            <param name="name">Name aka ID of window to modify</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowCollapsed(VoxelEngine.UI.UIContext,System.Boolean,VoxelEngine.UI.UICond)">
            <summary>
Sets collapsed state of current window.
</summary>
            <param name="collapsed">Boolean which represents collapsed state.</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowCollapsed(VoxelEngine.UI.UIContext,System.String,System.Boolean,VoxelEngine.UI.UICond)">
            <summary>
Sets collapsed state of window which is identified by name.
</summary>
            <param name="name">Name aka ID of window to modify</param>
            <param name="collapsed">Boolean which represents collapsed state.</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowSize(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond)">
            <summary>
Sets size of current window.
</summary>
            <remarks>Set axis to 0.0f to force an auto-fit on this axis.</remarks>
            <param name="size">Vector for window size</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowSize(VoxelEngine.UI.UIContext,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond)">
            <summary>
Sets size of window is identified by name.
</summary>
            <remarks>Set axis to 0.0f to force an auto-fit on this axis.</remarks>
            <param name="name">Name aka ID of window to modify</param>
            <param name="size">Vector for window size</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowPos(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond)">
            <summary>
Sets position of current window.
</summary>
            <param name="pos">Vector of absolut position on screen. Pivot is top left of the window.</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowPos(VoxelEngine.UI.UIContext,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond)">
            <summary>
Sets position of window which is identified by name.
</summary>
            <param name="name">Name aka ID of window to modify</param>
            <param name="pos">Vector of absolut position on screen. Pivot is top left of the window.</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetWindowFontScale(VoxelEngine.UI.UIContext,System.Single)">
            <summary>
Sets font scale of actual window.
</summary>
            <remarks>Adjust IO.FontGlobalScale if you want to scale all windows</remarks>
            <param name="scale">Value for font scale</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowBgAlpha(VoxelEngine.UI.UIContext,System.Single)">
            <summary>
Sets background color alpha of window, which is opened next with Begin(). Therefore call before Begin().
</summary>
            <remarks>Helper to easily modify ImGuiCol_WindowBg/ChildBg/PopupBg. You may also use ImGuiWindowFlags_NoBackground.</remarks>
/// <param name="alpha">Value of background color alpha</param></member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowFocus(VoxelEngine.UI.UIContext)">
            <summary>
Sets the focus to the window which is opened next with Begin(). Therefore, call before Begin().
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowCollapsed(VoxelEngine.UI.UIContext,System.Boolean,VoxelEngine.UI.UICond)">
            <summary>
Sets collapsed state of window, which is opened next with Begin(). Therefore, call befor Begin().
</summary>
            <param name="collapsed">Boolean which represents the state for collapsing</param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowContentSize(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Sets content size of window, which is opened next with Begin(). Therefore call before Begin().
</summary>
            <remarks>Similiar with enforcing the range of scrollbars</remarks>
            <remarks>Not including window decorations (title bar, menu bar, etc.)</remarks>
            <remarks>Set an axis to 0.0f to leave it automatic</remarks>
            <param name="cont_size">Content size vector</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowSizeConstraints(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Sets constrains of window, which is opened next with Begin(). Therefore, call before Begin().
</summary>
            <remarks>Use -1,-1 on either X/Y axis to preserve the current size.</remarks>
            <remarks>Sizes will be rounded down.</remarks>
            <param name="size_min">Min size vector</param>
            <param name="size_max">Max size vector</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowSize(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond)">
            <summary>
Sets size of window, which is openened next with Begin(). Therefore, call before Begin().
</summary>
            <param name="size">Size Vector for the window. Set axis to 0.0f to force an auto-fit on this axis </param>
            <param name="cond">Condition of call. See UICond for more information. Default = 0</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetManipulateWindowExtension.SetNextWindowPos(VoxelEngine.UI.UIContext,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UICond,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Sets position of window, which is opened next with Begin(). Therefore, call before Begin().
</summary>
            <param name="pos">Vector of absolut position on screen</param>
            <param name="cond">Condition of call. See UICond for more information</param>
            <param name="pivot">Pivot vector of window. (0f, 0f) is top left, (0.5f, 0.5f) is center, (1f, 1f) is bottom right, etc.</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetManipulateWindowExtension">
            <summary>
Contains elementes to manipulate thw window.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UICond">
            <summary>
Sets the ImGui Variable Condition.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetWindowChildExtension.EndChild(VoxelEngine.UI.UIContext)">
            <summary>
Ends the current child window.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetWindowChildExtension.BeginChild(VoxelEngine.UI.UIContext,System.String,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,VoxelEngine.UI.UIWindowFlags)">
            <summary>
Creates and starts appending to a child window.
</summary>
            <param name="name">Title of the child window. Also an unique identifier.</param>
            <param name="childSize">Size of the child window as a 2d vector.</param>
            <param name="windowFlags">Flags which can be used to manipulate the child windows appearance</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetWindowChildExtension">
            <summary>
Contains elements to create childs for windows.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetWindowExtension.End(VoxelEngine.UI.UIContext)">
            <summary>
Ends last window, which was opened. Pops the window from stack.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetWindowExtension.Begin(VoxelEngine.UI.UIContext,System.String,VoxelEngine.UI.UIWindowFlags)">
            <summary>
Begins a new window, pushs it to the stack and starts appending to it.
Writes boolean into the dictionary ElementValues with name as key, which holds the state of openclosed, open = true, closed = false.
</summary>
            <param name="name">Unique identifier and name of the window which is shown in the title bar</param>
            <param name="windowFlags">Flags which can be used to manipulate the windows appearance</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetWindowExtension">
            <summary>
Contains elements to create a window;
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.VSliderInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Int32,System.Int32)">
            <summary>
Creates a single slider which takes an int. Sizeable.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of slider</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.VSliderInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Int32,System.Int32,System.String)">
            <summary>
Creates a single slider which takes an int. Sizeable.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of slider</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.VSliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Single,System.Single)">
            <summary>
Creates a single slider which takes a float. Sizeable.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of slider</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.VSliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Single,System.Single,System.String)">
            <summary>
Creates a single slider which takes a float. Sizeable.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of slider</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.VSliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.ValueType!System.Numerics.Vector2!System.Runtime.CompilerServices.IsBoxed,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates a single slider which takes a float. Sizeable.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="size">Size of slider</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
            <param name="power">Use power!=1.0 for power curve sliders</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
Creates four sliders which take ints.
Has the format %d on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
Creates four sliders which take ints.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
Creates three sliders which take ints.
Has the format %d on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
Creates three sliders which take ints.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
Creates two sliders which take ints.
Has the format %d on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
Creates two sliders which take ints.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
Creates a single slider which takes an int.
Has the format %d on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderInt(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
Creates a single slider which takes an int.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single)">
            <summary>
Creates four sliders which take floats.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String)">
            <summary>
Creates four sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat4(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates four sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
            <param name="power">Use power!=1.0 for power curve sliders</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single)">
            <summary>
Creates three sliders which take floats.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String)">
            <summary>
Creates three sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat3(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates three sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
            <param name="power">Use power!=1.0 for power curve sliders</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single)">
            <summary>
Creates two sliders which take floats.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String)">
            <summary>
Creates two sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat2(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates two sliders which take floats.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
            <param name="power">Use power!=1.0 for power curve sliders</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single)">
            <summary>
Creates a single slider which takes a single float.
Has the format %.3f on the slider element.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String)">
            <summary>
Creates a single slider which takes a float.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetSliderExtension.SliderFloat(VoxelEngine.UI.UIContext,System.String,System.Boolean,System.Single,System.Single,System.String,System.Single)">
            <summary>
Creates a single slider which takes a float.
</summary>
            <param name="label">Label of the slider. Also an unique identifier</param>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="min">Min Value of slider</param>
            <param name="max">Max value of slider</param>
            <param name="format">Format how the sliders value is viewed on the slider element</param>
            <param name="power">Use power!=1.0 for power curve sliders</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetSliderExtension">
            <summary>
Contains sliders in many various versions.
</summary>
        </member>
        <member name="T:VoxelEngine.World.Landscape.LandType">
            <summary>
Enum class for different land types.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.AnimationControl.UpdateAnimations">
            <summary>
Updates all Animations
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.AnimationControl.GetAnimationSet(System.String)">
            <summary>
Gets the desired animation set
</summary>
            <param name="objectName">name of object which animation set is queried</param>
            <returns>Animation set</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.AnimationControl.AddAnimationSet(System.String,VoxelEngine.Animations.AnimationSet)">
            <summary>
Adds a new animation set
</summary>
            <param name="objectName">Name how the animation set should be called</param>
            <param name="animationSet">Animation set itself</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.AnimationControl.SetAnimationTempo(System.String,System.String,System.UInt32)">
            <summary>
Changes the animationtempo
</summary>
            <param name="objectName">Object which animation should be manipulated</param>
            <param name="animationType">Animation which should be changed</param>
            <param name="ticksPerFrame">1000 ticks are one second. So with 500 as value the animation changes its frames twice a second</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.AnimationControl.ChangeAnimation(System.String,System.String,System.Boolean)">
            <summary>
Changes the animation
</summary>
            <param name="objectName">Object which animation should be changed</param>
            <param name="animationType">Animation which should be used</param>
            <param name="isLooped">Is the animation looped?</param>
            <returns>Success</returns>
        </member>
        <member name="T:VoxelEngine.Controllers.AnimationControl">
            <summary>
Class for controlling of animation
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.ResetAnimationModelsOrientation">
            <summary>
Resets the orientation of the models in the animation
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.SetAnimationModelsDirection(System.Int32,System.Numerics.Vector3)">
            <summary>
Sets the direction of all models in the animation set by given angle around given axis
</summary>
            <param name="angleInDegrease">angle of direction</param>
            <param name="axis">The models are rotated around given axis</param>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.RotateAnimationModels(System.Int32,System.Numerics.Vector3)">
            <summary>
Rotates all models in the animation set by given angle around given axis
</summary>
            <param name="angleInDegrease">angle of rotation</param>
            <param name="axis">The models are rotated around given axis</param>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.GetAnimation(System.String)">
            <summary>
Returns animation with given name
</summary>
            <param name="name">name of animation</param>
            <returns>animation with given name</returns>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.SetAnimationTempo(System.String,System.UInt32)">
            <summary>
Changes the animationtempo
</summary>
            <param name="name">Animation which should be changed</param>
            <param name="ticksPerFrame">1000 ticks are one second. So with 500 as value the animation changes its frames twice a second</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.SetNextAnimation(System.String,System.Boolean)">
            <summary>
Activates desired animation
</summary>
            <param name="name">Name of desired animation</param>
            <returns />
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.GetCurrentAnimation">
            <summary>
Returns the currently active animation
</summary>
            <returns>Currently active animation</returns>
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.AddAnimation(System.String,VoxelEngine.Animations.Animation)">
            <summary>
Adds an animation to the animation set
</summary>
            <param name="name">Desired name for animation</param>
            <param name="animation">Animation to add</param>
            <returns />
        </member>
        <member name="M:VoxelEngine.Animations.AnimationSet.get_Name">
            <summary>
Returns the name of the Animation
</summary>
            <returns>name of animation</returns>
        </member>
        <member name="P:VoxelEngine.Animations.AnimationSet.Name">
            <summary>
Name of the Animation
</summary>
        </member>
        <member name="T:VoxelEngine.Animations.AnimationSet">
            <summary>
Contains several animations.
</summary>
        </member>
        <member name="M:VoxelEngine.RendererBase.Render(std.vector&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;,std.allocator&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;&gt;&gt;,System.Single)">
            <summary>
This function is our render-function. It is different for each Renderer.
<param name="chunksForRendering">ChunksForRendering are our chunks we want to render.</param><param name="offsetTime">offsetTime</param></summary>
        </member>
        <member name="M:VoxelEngine.RendererBase.Init(VoxelEngine.IEngine,EngineCore.Graphics.GraphicController*,VoxelEngine.Controllers.CameraControl,VoxelEngine.Controllers.ColorPaletteControl,EngineCore.Input.InputSystem*)">
            <summary>
Initialize our Renderer with the given parameters like camera and so on.
<param name="engine">reference to our engine</param><param name="graphicControl">reference to our graphic controller</param><param name="cameraControl">reference to our camera controller</param><param name="colorPalette">reference to our color palette</param><param name="input">reference to our input</param></summary>
        </member>
        <member name="P:VoxelEngine.IEngine.FrameCount">
            <summary>
Only getter for the FrameCount.
</summary>
        </member>
        <member name="P:VoxelEngine.IEngine.Window">
            <summary>
Only getter for the Window.
</summary>
        </member>
        <member name="P:VoxelEngine.IEngine.Input">
            <summary>
Only getter for the Input.
</summary>
        </member>
        <member name="T:VoxelEngine.IEngine">
            <summary>
Interface for the Engine, which contains
getter for Input, Window, Timestep and FrameCount.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.GetCameraNames">
            <summary>
Returns a list of names of all existing cameras
</summary>
            <returns>List of camera names</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.PrintActiveCameraData">
            <summary>
Prints data of active camera to console
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.DeactivateRoleplayFreeSight">
            <summary>
Deactivates free sight for roleplaycameras
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.ActivateRoleplayFreeSight">
            <summary>
Activates free sight for roleplaycamera
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.ChangePinnedObject(VoxelEngine.Cameras.ITrackable)">
            <summary>
Change pinned object.
</summary>
            <param name="pinnedObject">new object which will be in focus</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.UpdateOffset(System.Numerics.Vector3)">
            <summary>
Change positional offset
</summary>
            <param name="positionOffset">new offset as vector3</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.UpdateEulerAngles(System.Numerics.Vector3)">
            <summary>
Change euler angle offset
</summary>
            <param name="eulerAngleOffset">new angles as vector3</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddRoleplayCamera(System.String,VoxelEngine.Cameras.ITrackable,System.Numerics.Vector3,System.Numerics.Vector3,VoxelEngine.WrapperInput.WrapperInput)">
            <summary>
Creates new following camera. Only follows object in position, but not in rotation.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="pinnedObject">Object which will be followed</param>
            <param name="positionOffset">Positional offset related to followed object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to followed object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddRoleplayCamera(System.String,System.String,System.Numerics.Vector3,System.Numerics.Vector3,VoxelEngine.WrapperInput.WrapperInput)">
            <summary>
Creates new following camera. Only follows object in position, but not in rotation.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="objectName">Object which will be followed. Has to be created first with object control</param>
            <param name="positionOffset">Positional offset related to followed object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to followed object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddFollowingCamera(System.String,VoxelEngine.Cameras.ITrackable,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Creates new following camera. Only follows object in position, but not in rotation.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="pinnedObject">Object which will be followed. Has to be created first with object control</param>
            <param name="positionOffset">Positional offset related to followed object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to followed object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddFollowingCamera(System.String,System.String,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Creates new following camera. Only follows object in position, but not in rotation.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="objectName">Object which will be followed</param>
            <param name="positionOffset">Positional offset related to followed object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to followed object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddTrackingCamera(System.String,VoxelEngine.Cameras.ITrackable,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Creates new tracking camera. Moves around like the tracked object. Rotation will also be updated.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="pinnedObject">Object which will be tracked</param>
            <param name="positionOffset">Positional offset related to tracked object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to tracked object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddTrackingCamera(System.String,System.String,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Creates new tracking camera. Moves around like the tracked object. Rotation will also be updated.
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="objectName">Object which will be tracked. Has to be created first with object control</param>
            <param name="positionOffset">Positional offset related to tracked object. Given as x, y, z</param>
            <param name="eulerAngleOffset">Angle offset related to tracked object. Given as angle for x, y, z counterclockwise</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.CreateAndAddDefaultCamera(System.String,VoxelEngine.WrapperInput.WrapperInput)">
            <summary>
Creates new default camera
</summary>
            <param name="cameraName">Name of new camera</param>
            <param name="input">input controller</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.SelectActiveCamera(System.String)">
            <summary>
Selects camera by name and sets it as active
</summary>
            <param name="cameraName">Name of camera</param>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.RemoveCamera(System.String)">
            <summary>
Removes camera by name
</summary>
            <param name="name">Name of camera</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.CameraControl.AddCamera(System.String,VoxelEngine.Cameras.ICamera)">
            <summary>
Adds new camera if it is not existing
</summary>
            <param name="name">Name of camera</param>
            <param name="camera">Camera to be added</param>
            <returns>Success boolean</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.CameraControl.ActiveCameraName">
            <summary>
Returns active camera name.
</summary>
            <returns>Active camera name</returns>
        </member>
        <member name="T:VoxelEngine.Controllers.CameraControl">
            <summary>
The main <c>CameraControl</c> class.
Contains all methods for performing a basic camera control system.
</summary>
            <remarks>
                <para>This class can add cameras and remove cameras to the control system.</para>
                <para>It also has a setter for the rendercamera.</para>
            </remarks>
        </member>
        <member name="M:EngineCore.Graphics.Buffer.VoxelBuffer.ClearVoxelRenderList">
            <summary>
This function clears our <see cref="F:EngineCore.Graphics.Buffer.VoxelBuffer.List_" />.
</summary>
        </member>
        <member name="M:EngineCore.Graphics.Buffer.VoxelBuffer.VoxelBufferData(std.vector&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;,std.allocator&lt;std.shared_ptr&lt;EngineCore.Culling.Data.ChunkData&gt;&gt;&gt;)">
            <summary>
This function deterermines all voxels with index != 0 and 
append them to <see cref="F:EngineCore.Graphics.Buffer.VoxelBuffer.List_" />.
</summary>
        </member>
        <member name="F:EngineCore.Graphics.Buffer.VoxelBuffer.List_">
            <summary>
Store for our voxels that are rendered.
</summary>
        </member>
        <member name="T:EngineCore.Graphics.Buffer.VoxelBuffer">
            <summary>
This class constructs a VoxelBuffer for DefaultRendering.
</summary>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.op_Assign(EngineCore.Culling.Data.ChunkData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
MoveAssign
</summary>
            <param name="other">ToMove</param>
            <returns>New assigned ChunkData</returns>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.#ctor(EngineCore.Culling.Data.ChunkData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
MoveConstructor
</summary>
            <param name="other">ToMove</param>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.op_Assign(EngineCore.Culling.Data.ChunkData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Copyassign
</summary>
            <param name="other">ToCopy</param>
            <returns>Copy</returns>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.#ctor(EngineCore.Culling.Data.ChunkData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Copyconstructor
</summary>
            <param name="other">ToCopy</param>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.Dispose">
            <summary>
Destructor
</summary>
        </member>
        <member name="M:EngineCore.Culling.Data.ChunkData.#ctor">
            <summary>
Creates a empty ChunkData Object.
</summary>
        </member>
        <member name="F:EngineCore.Culling.Data.ChunkData.List">
            <summary>
Voxeldata in chunk
</summary>
        </member>
        <member name="F:EngineCore.Culling.Data.ChunkData.OffsetZ">
            <summary>
Offset in z direction
</summary>
        </member>
        <member name="F:EngineCore.Culling.Data.ChunkData.OffsetY">
            <summary>
Offset in y direction
</summary>
        </member>
        <member name="F:EngineCore.Culling.Data.ChunkData.OffsetX">
            <summary>
Offset in x direction
</summary>
        </member>
        <member name="F:EngineCore.Culling.Data.ChunkData.VoxelCount">
            <summary>
Amount of voxel in this chunk
</summary>
        </member>
        <member name="T:EngineCore.Culling.Data.ChunkData">
            <summary>
Contians information of the specific chunk.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.GetColorByIndexInPalette(System.String,System.Int32)">
            <summary>
This function gets the color from the given index.
</summary>
            <param name="paletteName">Name of the palette, you want to pick a color from.</param>
            <param name="index">The index of the color.</param>
            <returns>Returns EngineCore::Palette::Data::Color, -1 if the paletteName was not found or -2 if the index is wrong.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.SetRenderColorPalette(System.String)">
            <summary>
This function sets our RenderColorPalette, which Renders our World,
with the given ColorPalette. Determined by the paletteName.
</summary>
            <param name="paletteName">the name of our ColorPalette, we want to set as RenderColorPalett.</param>
            <returns> is true, if it sets succesfully, else false.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.GetColorPaletteNames">
            <summary>
This function returns a list of all ColorPaletteNames.
</summary>
            <returns>A List with all ColorPaletteNames.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.RotateColorIndexDownwards(System.String,System.Int32,System.Int32)">
            <summary>
This function rotates, in a defined range in a ColorPalette, every color one step downwards.
</summary>
            <param name="paletteName">Name of the palette, you want to work with.</param>
            <param name="startIndex">First index which should be rotated .</param>
            <param name="range">How many colors should be rotated.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.RotateColorIndexUpwards(System.String,System.Int32,System.Int32)">
            <summary>
This function rotates, in a defined range in a ColorPalette, every color one step upwards.
</summary>
            <param name="paletteName">Name of the palette, you want to work with.</param>
            <param name="startIndex">First index which should be rotated .</param>
            <param name="range">How many colors should be rotated.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.RemoveColorPalette(System.String)">
            <summary>
This function removes a ColorPalette from the ColorPaletteList.
</summary>
            <param name="paletteName">the name of our ColorPalette.</param>
            <returns> is true, if it is removed succesfully, else false.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.OverrideColor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
This function changes a Color (build with the transferred values) and changes the Color at the given position in our ColorPalette.
</summary>
            <param name="paletteName"> our ColorPalette which we want to change.</param>
            <param name="red">our transferred red-value.</param>
            <param name="blue">our transferred blue-value.</param>
            <param name="green">our transferred green-value.</param>
            <param name="alpha">our transferred alpha-value.</param>
            <param name="position">the given position.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.OverrideColor(System.String,System.UInt32,System.Int32)">
            <summary>
This function changes the value at the position in our ColorPalette to our transferred value.
</summary>
            <param name="paletteName"> our ColorPalette which we want to change.</param>
            <param name="hexValue">our transferred value.</param>
            <param name="position">the given position.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.AddColorToAColorPalette(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
This function adds one color (build with the transferred values) and adds it to our ColorPalette.
</summary>
            <param name="paletteName"> our ColorPalette which we want to add a color.</param>
            <param name="red">our transferred red-value.</param>
            <param name="blue">our transferred blue-value.</param>
            <param name="green">our transferred green-value.</param>
            <param name="alpha">our transferred alpha-value.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.AddColorToAColorPalette(System.String,System.UInt32)">
            <summary>
This function sets one Color from the ColorPalette on the transferred value.
</summary>
            <param name="paletteName"> our ColorPalette which we want to add a color.</param>
            <param name="hexValue">our transferred value.</param>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.AddColorPaletteWithMagicaVoxelPalette(System.String,VoxelEngine.FileSystem.VoxColor[])">
            <summary>
This function creates and inits a ColorPalette with MagicaVoxel values
and adds it to the ColorPaletteList.
</summary>
            <param name="paletteName">the name of our ColorPalette.</param>
            <param name="voxColor">are our MagicaVoxelValues.</param>
            <returns> is true, if it is created succesfully, else false.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.AddColorPaletteWithOwnPalett(System.String,System.UInt32*,System.Byte)">
            <summary>
This function creates and inits a ColorPalette with own values
and adds it to the ColorPaletteList.
</summary>
            <param name="paletteName">the name of our ColorPalette.</param>
            <param name="colorArray">our Colors.</param>
            <param name="size">the size of our Palette.</param>
            <returns> is true, if it is created succesfully, else false.</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.ColorPaletteControl.AddColorPaletteWithDefaultValues(System.String)">
            <summary>
This function creates and inits a ColorPalette with default values
and adds it to the ColorPaletteList.
</summary>
            <param name="paletteName">the name of our ColorPalette.</param>
            <returns> is true, if it is created succesfully, else false.</returns>
        </member>
        <member name="P:VoxelEngine.Controllers.ColorPaletteControl.RenderColorPalette">
            <summary>
The ColorPalette that gets rendered
</summary>
        </member>
        <member name="T:VoxelEngine.Controllers.ColorPaletteControl">
            <summary>
The <c>ColorPaletteControl</c> class.
Contains all methods for ColorPalette and a storage of them.
</summary>
            <remarks>
                <para>This class can add colorpalette and remove colorpalette to the control system.</para>
                <para>It also has a setter for the rendercolorpalette.</para>
            </remarks>
        </member>
        <member name="M:EngineCore.Palette.RGBA.InitColorPalettWithDefaultValues">
            <summary>
Sets our default color values.
</summary>
        </member>
        <member name="M:EngineCore.Palette.RGBA.OverrideHexValueInColorPalette(System.UInt32,System.Byte)">
            <summary>
Intern function which got called by OverrideColor.
</summary>
        </member>
        <member name="M:EngineCore.Palette.RGBA.AddHexToColorPalette(System.UInt32)">
            <summary>
Intern function which got called by AddColor.
</summary>
        </member>
        <member name="F:EngineCore.Palette.RGBA.Colors_">
            <summary>
Storage for our colors in our ColorPalett. 
The size is <see cref="F:EngineCore.Palette.ColorPalettSize" />.  
</summary>
        </member>
        <member name="F:EngineCore.Palette.RGBA.FreeSlot">
            <summary>
Index for free color Palette slot
</summary>
        </member>
        <member name="F:EngineCore.Palette.RGBA.Name_">
            <summary>
Storage for the name of the ColorPalette.
</summary>
        </member>
        <member name="M:EngineCore.Palette.RGBA.OverrideColor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
This function build with the transferred values one Color and change the value at the given position in our ColorPalette.
</summary>
            <param name="red">our transferred red-value.</param>
            <param name="blue">our transferred blue-value.</param>
            <param name="green">our transferred green-value.</param>
            <param name="alpha">our transferred alpha-value.</param>
            <param name="position">the given position.</param>
        </member>
        <member name="M:EngineCore.Palette.RGBA.OverrideColor(System.UInt32,System.Int32)">
            <summary>
This function change the value at the position in our ColorPalette to our transferred value.
</summary>
            <param name="hexValue">our transferred value.</param>
            <param name="position">the given position.</param>
        </member>
        <member name="M:EngineCore.Palette.RGBA.AddColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
This function build with the transferred values one color and add it to our storage of Colors.
</summary>
            <param name="red">our transferred red-value.</param>
            <param name="blue">our transferred blue-value.</param>
            <param name="green">our transferred green-value.</param>
            <param name="alpha">our transferred alpha-value.</param>
        </member>
        <member name="M:EngineCore.Palette.RGBA.AddColor(System.UInt32)">
            <summary>
This function set one <see cref="F:EngineCore.Palette.RGBA.Colors_" /> on the transferred value.
</summary>
            <param name="hexValue">our transferred value.</param>
        </member>
        <member name="M:EngineCore.Palette.RGBA.InitWithOwnPalett(System.UInt32*,System.Byte)">
            <summary>
This function set our <see cref="F:EngineCore.Palette.RGBA.Colors_" /> on the transferred values.
</summary>
            <param name="colorArray">our transferred values.</param>
        </member>
        <member name="M:EngineCore.Palette.RGBA.InitDefaultColors">
            <summary>
This function set our <see cref="F:EngineCore.Palette.RGBA.Colors_" /> on default values.
</summary>
        </member>
        <member name="M:EngineCore.Palette.RGBA.Dispose">
            <summary>
Destroys our ColorPalette.
</summary>
        </member>
        <member name="M:EngineCore.Palette.RGBA.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;)">
            <summary>
Creates a new instance of ColorPalette.
</summary>
            <param name="paletteName">is the name of our ColorPalette.</param>
        </member>
        <member name="T:EngineCore.Palette.RGBA">
            <summary>
A object of this Class represents a ColorPalette.
</summary>
        </member>
        <member name="T:EngineCore.Palette.Data.Color">
            <summary>
A object of this Class represents a Color.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UIMouseButton">
            <summary>
Represents the different mouse buttons.
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.BulletText(VoxelEngine.UI.UIContext,System.Boolean,System.String)">
            <summary>
Shortcut for Bullet().Text()
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.LabelText(VoxelEngine.UI.UIContext,System.Boolean,System.String,System.String)">
            <summary>
Text with a label next to it on the right side.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="label">Content of label.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.TextWrapped(VoxelEngine.UI.UIContext,System.Boolean,System.String)">
            <summary>
Wrapped text.
Note that this won't work on an auto-resizing window if there's no other widgets to extend the window width, yoy may need to set a size using SetNextWindowSize().
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.TextDisabled(VoxelEngine.UI.UIContext,System.Boolean,System.String)">
            <summary>
Text outgrayed.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.TextColored(VoxelEngine.UI.UIContext,System.Boolean,System.String,System.ValueType!VoxelEngine.UI.Palette.Color4!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Colored Text.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
            <param name="textColor">Color of Text.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetTextExtension.Text(VoxelEngine.UI.UIContext,System.Boolean,System.String)">
            <summary>
Simple formatted Text.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="formattedText">Text which gets displayed. See Api documentation for formats which can be used here</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetTextExtension">
            <summary>
Contains text elements.
</summary>
            <example>
Formatoptions for the formattedText:
<code>
format 1 =&gt; string.Format("one: {0} two: {1} three: {2}", one, two, three)

format 2 =&gt; "one: " + one + " two: " + two + " three: " + three

format 3 =&gt; $"one: {one} two: {two} three: {three}" 
</code></example>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.GetNextAnimationFrame">
            <summary>
Returns next animation frame
</summary>
            <returns>Next animation frame</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.CheckNextFrameReady">
            <summary>
Returns readyness for next frame
</summary>
            <returns>readyness for next frame</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.GetFrame(System.UInt32)">
            <summary>
Returns frame with given number if existent
</summary>
            <param name="frameNumber">Number of Frame</param>
            <returns>Queried frame</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.ResetModelsRotation">
            <summary>
Resets orientation of all models. Only use if there is an anomaly caused by magica voxel
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.SetModelsDirection(System.Int32,System.Numerics.Vector3)">
            <summary>
Sets direction of model with given angle around given axis
</summary>
            <param name="angleInDegrease">angle of direction</param>
            <param name="axis">The model is rotated around given axis</param>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.RotateModels(System.Int32,System.Numerics.Vector3)">
            <summary>
Rotates model by given angle around given axis
</summary>
            <param name="angleInDegrease">angle of rotation</param>
            <param name="axis">The mode is rotated around given axis</param>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.SetAnimationFrame(System.UInt32)">
            <summary>
Sets an explicit animationFrame
</summary>
            <param name="frameNumber">number of desired frame</param>
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.ResetAnimation">
            <summary>
Resets the animation to start
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.InitAnimation(System.Collections.Generic.List`1{VoxelEngine.Data.Model})">
            <summary>
Initalizes the animation with the given list of models
</summary>
            <param name="animationModels" />
            <returns>Success</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.set_TicksPerFrame(System.UInt32)">
            <summary>
Sets the number of updates per second
</summary>
            <param name="value">number of updates per second</param>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_TicksPerFrame">
            <summary>
Returns the number of updates per second
</summary>
            <returns>number of current animation frame</returns>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.TicksPerFrame">
            <summary>
Number of updates per second
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_CurrentFrame">
            <summary>
Returns the number of the current animation frame
</summary>
            <returns>number of current animation frame</returns>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.CurrentFrame">
            <summary>
The number of the current animation frame
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_FrameCount">
            <summary>
Returns the total number of animations frames
</summary>
            <returns>total number of animations frames</returns>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.FrameCount">
            <summary>
The total number of animation frames
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_PassedLastFrameOnce">
            <summary>
Returns state of last frame passed
</summary>
            <returns>state of last frame passed</returns>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.PassedLastFrameOnce">
            <summary>
Was the last frame of the animation passed check
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_IsLooped">
            <summary>
Returns state of looping
</summary>
            <returns>state of looping</returns>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.set_IsLooped(System.Boolean)">
            <summary>
Sets state of looping
</summary>
            <param name="value">looping</param>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.IsLooped">
            <summary>
State of looping
</summary>
        </member>
        <member name="M:VoxelEngine.Animations.Animation.get_Name">
            <summary>
Returns the name of the Animation
</summary>
            <returns>name of animation</returns>
        </member>
        <member name="P:VoxelEngine.Animations.Animation.Name">
            <summary>
Name of the Animation
</summary>
        </member>
        <member name="T:VoxelEngine.Animations.Animation">
            <summary>
Contains Models for one Animation
</summary>
        </member>
        <member name="P:VoxelEngine.Timer.FramesPerSecond">
            <summary>
Gets the calculated frames per second value which is 1 divided by TimeBetweenDrawsInSeconds.
</summary>
            <value>
The calculated frames per second value.
</value>
        </member>
        <member name="P:VoxelEngine.Timer.TimeBetweenUpdatesInSeconds">
            <summary>
Gets the time between two update calls in seconds.
</summary>
            <value>
The time between updates in seconds.
</value>
        </member>
        <member name="P:VoxelEngine.Timer.TimeBetweenDrawsInSeconds">
            <summary>
Gets the time between two draw calls in seconds.
</summary>
            <value>
The time between draws in seconds.
</value>
        </member>
        <member name="P:VoxelEngine.Timer.CurrentTimeInMilliseconds">
            <summary>
Gets the current time in milliseconds.
</summary>
            <value>
The current time in milliseconds.
</value>
        </member>
        <member name="P:VoxelEngine.Timer.CurrentTimeInSeconds">
            <summary>
Gets the current time in seconds.
</summary>
            <value>
The current time in seconds.
</value>
        </member>
        <member name="M:VoxelEngine.Timer.get_FrameInterpolationFactor">
            <summary>
Gets interpolation factor for the previous and current update.
</summary>
            <returns>Interpolation factor for the previous and current update</returns>
        </member>
        <member name="P:VoxelEngine.Timer.FrameInterpolationFactor">
            <summary>
Contains the interpolation factor for the previous and current update.
A zero indicates that this draw is very close to the previous update while
an one indicates that this is very close to the current update.
</summary>
            <value>
The interpolation factor for the previous and current update.
</value>
        </member>
        <member name="P:VoxelEngine.Timer.UpdateTimeInTicks">
            <summary>
Gets and sets the time duration between two update calls in ticks.
Use with <see cref="P:VoxelEngine.Timer.TicksPerTenMicroseconds" />.
</summary>
            <value>
The conversion rate of ticks per ten microseconds.
</value>
        </member>
        <member name="M:VoxelEngine.Timer.get_TicksPerTenMicroseconds">
            <summary>
Gets conversion rate of ticks per ten microseconds
</summary>
            <returns>rate of ticks per ten microseconds</returns>
        </member>
        <member name="P:VoxelEngine.Timer.TicksPerTenMicroseconds">
            <summary>
Contains conversion rate of ticks per ten microseconds.
</summary>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.Looping(System.String,System.Boolean,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Declares, if a sound loops or not
</summary>
            <param name="name">Name of the sound</param>
            <param name="loop">bool if, the Sound is looping or not</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.Rewind(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Rewinds a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.Pause(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Pauses a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.Stop(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Stops a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.Play(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Plays a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetSoundPitch(System.String,System.Single,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Sets the pitch of a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="pitch">Pitch of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetSoundOrientation(System.String,System.Numerics.Vector3,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Sets the Orientation of a sound
</summary>
            <param name="name">Name of the sound</param>
            <param name="orientation">orientation, which must be a vector3</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetSoundVelocity(System.String,System.Numerics.Vector3,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Sets the Velocity of a sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="velocity">Velocity, which will be setted</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetSoundVolume(System.String,System.Single,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Sets the Volume of a sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="volume">Volume of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.GetSoundPosition(System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Returns the Position of a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
            <returns>returns a vector3 of the position</returns>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetSoundPosition(System.String,System.Numerics.Vector3,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Sets the Position of a Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="vector3">Vector 3 of the Position</param>
            <param name="type">Type of the sound, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.AddSound(System.String,System.String,VoxelEngine.AudioSystem.AudioType)">
            <summary>
Adds a new Sound
</summary>
            <param name="name">Name of the Sound</param>
            <param name="filepath">Filepath to the .Wav file</param>
            <param name="type">Audiotype, can be Music, Fx or Voices</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetMasterPosition(System.Numerics.Vector3)">
            <summary>
Sets the Position of the Listener, should be on the Camera or the Player
</summary>
            <param name="position">vector3 of the position</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetMasterOrientation(System.Numerics.Vector3)">
            <summary>
Sets the Orientation of the Listener, wich will be on the Camera or the Player
</summary>
            <param name="orientation" />
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetMasterVelocity(System.Numerics.Vector3)">
            <summary>
Sets the Velocity of the Listener, wich will be on the Camera or the Player
</summary>
            <param name="velocity">The Velocity, which will be setted</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetVoicesVolume(System.Single)">
            <summary>
Sets the volume for one of the three soundcategories
in this case, the Volume of the voicec of the npcs
</summary>
            <param name="volume">The Volume, which will be setted</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetFxVolume(System.Single)">
            <summary>
Sets the volume for one of the three soundcategories
in this case, the Effects Volume
</summary>
            <param name="volume">The Volume, which will be setted</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetMusicVolume(System.Single)">
            <summary>
Sets the volume for one of the three soundcategories
in this case, the musicvolume
</summary>
            <param name="volume">The Volume, which will be setted</param>
        </member>
        <member name="M:VoxelEngine.Controllers.AudioControl.SetMasterVolume(System.Single)">
            <summary>
Sets the over all Volume, known as Mastervolume
</summary>
            <param name="volume">The Volume, which will be setted</param>
        </member>
        <member name="T:VoxelEngine.Controllers.AudioControl">
            <summary>
The overallclass for using audio in the voxelengine
</summary>
        </member>
        <member name="M:VoxelEngine.AudioSystem.BufferControl.AddBuffer(System.String,System.String)">
            <summary>
This function generates a buffer and adds it to the Bufferlist
This function also loads a .wav file in the Buffer
</summary>
            <param name="name">Name of the Buffer</param>
            <param name="filePath">filepath of the .wav which should be loaded in the buffer</param>
        </member>
        <member name="P:VoxelEngine.AudioSystem.BufferControl.default(System.String)">
            <summary>
This function returns the ID of the Buffer
</summary>
            <param name="index">Name of the Buffer</param>
        </member>
        <member name="T:VoxelEngine.AudioSystem.BufferControl">
            <summary>
The <c>BufferControl</c> class.
Contains all methods for AudioBuffers
</summary>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PopButtonRepeat(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Pops the latest PushButtonRepeat setting
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PushButtonRepeat(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean)">
            <summary>
in 'repeat' mode, Button*() functions return repeated true in a typematic manner (using io.KeyRepeatDelay/io.KeyRepeatRate setting). Note that you can call IsItemActive() after any Button() to tell if the button is held in the current frame.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="repeat">active or not</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PopAllowKeyboardFocus(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Pops the latest PushAllowKeyboardFocus setting
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PushAllowKeyboardFocus(VoxelEngine.UI.UIContext,System.Boolean,System.Boolean)">
            <summary>
allow focusing using TAB/Shift-TAB, enabled by default but you can disable it for certain widgets
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="allow_keyboard_focus">active or not</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PopTextWrapPos(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Pops the latest PushTextWrapPos
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PushTextWrapPos(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
word-wrapping for Text*() commands. smaller than 0.0f: no wrapping; 0.0f: wrap to end of window (or column); bigger than 0.0f: wrap at 'wrap_pos_x' position in window local space
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PushTextWrapPos(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
word-wrapping for Text*() commands. smaller than 0.0f: no wrapping; 0.0f: wrap to end of window (or column); bigger than 0.0f: wrap at 'wrap_pos_x' position in window local space
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="wrap_local_pos_x" />
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.CalcItemWidth(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
width of item given pushed settings and current cursor position
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.SetNextItemWidth(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
set width of the _next_ common large "item+label" widget. bigger than 0.0f: width in pixels, smaller than 0.0f align xx pixels to the right of window (so -1.0f always align width to the right side)
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="item_width">new width of the item</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PopItemWidth(VoxelEngine.UI.UIContext,System.Boolean)">
            <summary>
Pops the last pushed item width.
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
        </member>
        <member name="M:VoxelEngine.UI.WidgetParameterStacksExtension.PushItemWidth(VoxelEngine.UI.UIContext,System.Boolean,System.Single)">
            <summary>
set width of items for common large "item+label" widgets. bigger than 0.0f: width in pixels, smaller than 0.0f align xx pixels to the right of window (so -1.0f always align width to the right side). 0.0f = default to ~2/3 of windows width
</summary>
            <param name="isActive">Only creates the item if true. Use if item is used in containers like Menus, Popups etc.</param>
            <param name="item_width">new width of the item</param>
        </member>
        <member name="T:VoxelEngine.UI.WidgetParameterStacksExtension">
            <summary>
Contains elements for widget parameter stacks.
</summary>
        </member>
        <member name="T:VoxelEngine.UI.UIComboFlags">
            <summary>
Struct for different Imgui Combo Flags
</summary>
        </member>
    </members>
</doc>